{"version":3,"sources":["components/ComparisonTable.jsx","github-logo.svg","components/syntax-highlight/SyntaxHighligh.jsx","components/UI-kit/Button.jsx","components/UI-kit/TextField.jsx","components/UI-kit/Select.jsx","components/styles/index.js","components/formik/SimpleForm.jsx","components/formik/FormWithYup.jsx","utils.js","constants.js","hooks/useCountries.js","hooks/userRegions.js","components/formik/FormWithFetch.jsx","components/formik/FormWithDynamicInput.jsx","components/formik/Wizard.jsx","components/formik/WizardForm.jsx","components/react-final-form/SimpleForm.jsx","components/react-final-form/FormWithFetch.jsx","components/react-final-form/FormWithDynamicInput.jsx","components/react-final-form/Wizard.jsx","components/react-final-form/WizardForm.jsx","components/react-final-form/FormWithErrorFocus.jsx","components/Forms.jsx","components/syntax-highlight/formik/simpleForm.js","components/syntax-highlight/react-final-form/simpleForm.js","components/syntax-highlight/formik/formWithYup.js","components/syntax-highlight/formik/formWithFetch.js","components/syntax-highlight/react-final-form/formWithFetch.js","components/syntax-highlight/formik/formWithDynamicInput.js","components/syntax-highlight/react-final-form/formWithDynamicInput.js","components/syntax-highlight/react-final-form/formWithErrorFocus.js","components/syntax-highlight/formik/wizard.js","components/syntax-highlight/react-final-form/wizardForm.js","App.js","serviceWorker.js","index.js"],"names":["styles","table","margin","th","fontWeight","padding","tht","color","fontSize","tr","trh","background","td","secondaryInfo","marginTop","comparisionData","name","size","minifiedGZipped","typescript","asyncValidation","schemaValidation","errorFocus","hooks","popularity","wizard","Table","formik","finalForm","react_default","a","createElement","style","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","github_logo_ref2","fill","d","github_logo_ref3","github_logo_ref4","github_logo_ref5","github_logo_ref6","github_logo_ref7","github_logo_ref8","github_logo_ref9","github_logo_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","github_logo_SvgGithubLogo","_ref","svgRef","props","id","x","y","width","height","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","__webpack_require__","p","wrapper","link","textDecoration","display","justifyContent","alignItems","icon","marginLeft","SyntaxHighlight","codeString","codeUrl","prism","language","customStyle","borderLeft","maxHeight","href","rel","next","btn","Button","button_next","container","error","TextField","touched","textfield_next","Select","select_next","components_styles","form","flexDirection","getInitialValues","email","password","validate","values","errors","test","onSubmit","_ref2","setSubmitting","setTimeout","alert","JSON","stringify","LoginForm","formik_esm","initialValues","handleChange","handleBlur","handleSubmit","isSubmitting","commonStyles","UI_kit_TextField","type","onChange","onBlur","value","label","UI_kit_Button","disabled","unelevated","LoginSchema","Yup","shape","required","min","max","LoginFormYup","validationSchema","fetchUrl","_x","_fetchUrl","_callee","url","response","json","regenerator_default","wrap","_context","prev","fetch","sent","abrupt","stop","ROOT_API","useCountries","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","useEffect","_fetchCountries","asyncToGenerator","mark","concat","countries","fetchCountries","userRegions","countryCode","_fetchRegions","_data","regions","fetchRegions","countiesOptions$","createSelector","_","identity","map","code","regionsOptions$","region","SignUpSchema","firstName","lastName","country","FormikRMWCTextField","_ref6","render","_ref7","field","_ref8","SignUpForm","setCountry","_useCountries","_useCountries2","_userRegions","_userRegions2","_ref3","FormWithFetch_FormikRMWCTextField","_ref4","UI_kit_Select","options","minWidth","maxWidth","e","setFieldValue","_ref5","todoItem","todoRemoveBtn","todos","item","ValidationSchema","of","FormWithDynamicInput","_this2","remove","push","todo","index","FormWithDynamicInput_GroupItemTextField","groupName","icon_button_next","onClick","submit","React","Component","GroupItemTextField","get","Wizard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","setState","state","page","Math","children","previous","activePage","Children","toArray","bag","_this$props","count","setTouched","_this$state","isLastPage","enableReinitialize","handleReset","className","Page","actions","ms","Promise","resolve","then","window","undefined","WizardForm","formik_Wizard","favoriteColor","WizardForm_FormikRMWCTextField","component","sleep","react_final_form_es","submitting","input","meta","_ref10","change","_ref9","mutators","objectSpread","arrayMutators","_ref2$form$mutators","pop","react_final_form_arrays_es","fields","WizatForm","react_final_form_Wizard_Wizard","focusOnError","createDecorator","firstNameFocus","lastNameFocus","emailFocus","passwordFocus","decorators","titleWapper","title","lineHeight","marginBottom","textAlign","subtitle","formAndCodeWrapper","position","formAndCode","flexWrap","formWrapper","flexBasis","flexGrow","minHeigh","overflow","flex","perspective","codeWrapper","tabBar","nTabs","FormRender","formikForm","rffForm","formikCode","rffCode","activeTab","setActiveTab","hasFormik","tabs","getTabs","hasRFF","tab_bar","activeTabIndex","onActivate","evt","detail","tab","Forms","ComparisonTable","Forms_FormRender","SimpleForm","react_final_form_SimpleForm","SyntaxHighligh","FormWithYup","FormWithFetch","react_final_form_FormWithFetch","FormWithDynamicInput_FormWithDynamicInput","react_final_form_FormWithDynamicInput_FormWithDynamicInput","FormWithErrorFocus","formik_WizardForm","react_final_form_WizardForm","App","components_Forms","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e9385f2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst styles = {\n  table: {\n    margin: \"20px auto\"\n  },\n  th: {\n    fontWeight: 500,\n    padding: \"10px 5px\"\n  },\n  tht: {\n    fontWeight: 500,\n    color: \"rgb(45,45,45)\",\n    padding: \"10px 5px\",\n    fontSize: \"1.1em\"\n  },\n  tr: {\n    padding: \"10px 0\",\n    color: `rgba(45,45,45,0.8)`\n  },\n  trh: {\n    padding: \"10px 0\",\n    background: \"rgba(233, 223, 250)\",\n    color: `rgba(45,45,45,0.8)`\n  },\n  td: {\n    padding: \"10px 30px\"\n  },\n  secondaryInfo: {\n    marginTop: 5,\n    fontSize: \"0.8em\"\n  }\n};\nconst comparisionData = {\n  formik: {\n    name: \"Formik\",\n    size: {\n      minifiedGZipped: \"12.6 kB gzipped\"\n    },\n    typescript: \"✓\",\n    asyncValidation: \"✓\",\n    schemaValidation: \"✓\",\n    errorFocus: \"✗\",\n    hooks: \"✗\",\n    popularity: \"428,133\",\n    wizard: \"✓\"\n  },\n  finalForm: {\n    name: \"React Final Form\",\n    size: {\n      minifiedGZipped: \"7.5 kB gzipped\"\n    },\n    typescript: \"✓\",\n    asyncValidation: \"✓\",\n    schemaValidation: \"✗\",\n    errorFocus: \"✓\",\n    hooks: \"✓\",\n    popularity: \"83,674\",\n    wizard: \"✓\"\n  }\n};\nconst Table = () => {\n  const { formik, finalForm } = comparisionData;\n  return (\n    <table style={styles.table}>\n      <tbody>\n        <tr style={styles.tr}>\n          <th />\n          <th style={styles.tht}>{formik.name}</th>\n          <th style={styles.tht}>{finalForm.name}</th>\n        </tr>\n        <tr style={styles.trh}>\n          <th style={styles.th}>Size</th>\n          <td style={styles.td}>\n            <span>{formik.size.minifiedGZipped}</span>\n          </td>\n          <td style={styles.td}>\n            <span>{finalForm.size.minifiedGZipped}</span>\n          </td>\n        </tr>\n        <tr style={styles.tr}>\n          <th style={styles.th}>TypeScripct</th>\n          <td style={styles.td}>{formik.typescript}</td>\n          <td style={styles.td}>{finalForm.typescript}</td>\n        </tr>\n        <tr style={styles.trh}>\n          <th style={styles.th}>Async Validation</th>\n          <td style={styles.td}>{formik.asyncValidation}</td>\n          <td style={styles.td}>{finalForm.asyncValidation}</td>\n        </tr>\n        <tr style={styles.tr}>\n          <th style={styles.th}>Schema Validation</th>\n          <td style={styles.td}>{formik.schemaValidation}</td>\n          <td style={styles.td}>{finalForm.schemaValidation}</td>\n        </tr>\n        <tr style={styles.trh}>\n          <th style={styles.th}>On Submit Error Focus</th>\n          <td style={styles.td}>{formik.errorFocus}</td>\n          <td style={styles.td}>{finalForm.errorFocus}</td>\n        </tr>\n        <tr style={styles.tr}>\n          <th style={styles.th}>Hooks Support</th>\n          <td style={styles.td}>{formik.hooks}</td>\n          <td style={styles.td}>{finalForm.hooks}</td>\n        </tr>\n        <tr style={styles.trh}>\n          <th style={styles.th}>Wizard</th>\n          <td style={styles.td}>{formik.wizard}</td>\n          <td style={styles.td}>{finalForm.wizard}</td>\n        </tr>\n        <tr style={styles.tr}>\n          <th style={styles.th}>Popularity</th>\n          <td style={styles.td}>\n            <div>\n              <div>{formik.popularity}</div>\n              <div style={styles.secondaryInfo}>Weekly Download</div>\n            </div>\n          </td>\n          <td style={styles.td}>\n            <div>\n              <div>{finalForm.popularity}</div>\n              <div style={styles.secondaryInfo}>Weekly Download</div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#9B64DE\"\n}, React.createElement(\"path\", {\n  d: \"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365 c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63 c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996 c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136 c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559 c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559 c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997 c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851 c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136 c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41 c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126 c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817 c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994 c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849 c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24 c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979 c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146 c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995 c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906 C438.536,184.851,428.728,148.168,409.132,114.573z\"\n}));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgGithubLogo = function SvgGithubLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"20px\",\n    height: \"20px\",\n    viewBox: \"0 0 438.549 438.549\",\n    style: {\n      enableBackground: \"new 0 0 438.549 438.549\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGithubLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github-logo.b18fec7e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Icon } from \"rmwc\";\nimport { ReactComponent as Logo } from \"../../github-logo.svg\";\n\nconst styles = {\n  wrapper: {\n    width: \"100%\"\n  },\n  link: {\n    color: \"#9B64DE\",\n    textDecoration: \"none\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    padding: \"5px 5px 15px\"\n  },\n  icon: { marginLeft: 5 }\n};\nconst SyntaxHighlight = ({ codeString, codeUrl }) => {\n  return (\n    <div style={styles.wrapper}>\n      <SyntaxHighlighter\n        language=\"javascript\"\n        style={prism}\n        customStyle={{\n          background: \"#ECECEC\",\n          borderLeft: \"2px solid #9B65DE\",\n          maxHeight: 400\n        }}\n      >\n        {codeString}\n      </SyntaxHighlighter>\n      <div>\n        <a\n          style={styles.link}\n          href={codeUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          View on <Icon style={styles.icon} icon={<Logo />} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default SyntaxHighlight;\n","import React from \"react\";\nimport { Button as RmwcBtn } from \"rmwc\";\n\nconst styles = { btn: { margin: 10 } };\n\nconst Button = props => {\n  return <RmwcBtn style={styles.btn} {...props} />;\n};\n\nexport default Button;\n","import React from \"react\";\nimport { TextField as RmwcTxtField } from \"rmwc\";\n\nconst styles = {\n  container: { margin: 10 },\n  error: {\n    marginTop: 5,\n    fontSize: \"0.8em\",\n    color: \"red\"\n  }\n};\n\nconst TextField = props => {\n  const { error, touched } = props;\n  return (\n    <div style={styles.container}>\n      <RmwcTxtField {...props} />\n      {error && touched && <div style={styles.error}>{error}</div>}\n    </div>\n  );\n};\n\nexport default TextField;\n","import React from \"react\";\nimport { Select as RmwcSelect } from \"rmwc\";\n\nconst styles = {\n  container: { margin: 10 },\n  error: {\n    marginTop: 5,\n    fontSize: \"0.8em\",\n    color: \"red\"\n  }\n};\n\nconst Select = props => {\n  const { error, touched } = props;\n  return (\n    <div style={styles.container}>\n      <RmwcSelect {...props} />\n      {error && touched && <div style={styles.error}>{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","export default {\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\n","import React from \"react\";\nimport { Formik } from \"formik\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst LoginForm = () => (\n  <Formik\n    initialValues={getInitialValues()}\n    validate={validate}\n    onSubmit={onSubmit}\n  >\n    {({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => (\n      <form onSubmit={handleSubmit} style={commonStyles.form}>\n        <TextField\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.email}\n          error={errors.email}\n          touched={touched.email}\n          label={\"Email\"}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.password}\n          error={errors.password}\n          touched={touched.password}\n          label={\"Pasword\"}\n        />\n        <Button\n          label=\"Submit\"\n          type=\"submit\"\n          disabled={isSubmitting}\n          unelevated\n        />\n      </form>\n    )}\n  </Formik>\n);\n\nconst getInitialValues = () => ({ email: \"\", password: \"\" });\n\nconst validate = values => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n  return errors;\n};\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required(\"Required\")\n});\n\nconst LoginFormYup = () => {\n  return (\n    <div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting\n        }) => (\n          <Form style={commonStyles.form}>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              error={errors.email}\n              touched={touched.email}\n              label={\"Email\"}\n            />\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              error={errors.password}\n              touched={touched.password}\n              label={\"Pasword\"}\n            />\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst getInitialValues = () => ({\n  email: \"\",\n  password: \"\"\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginFormYup;\n","export async function fetchUrl(url) {\n  const response = await fetch(url);\n  const json = await response.json();\n  return json;\n}\n","export const ROOT_API = \"https://location-api-hoss.herokuapp.com/\";\n","import { useState, useEffect } from \"react\";\n\nimport { fetchUrl } from \"../utils\";\nimport { ROOT_API } from \"../constants\";\n\nexport default () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    async function fetchCountries() {\n      setLoading(true);\n      const data = await fetchUrl(`${ROOT_API}countries`);\n      setData(data.countries);\n      setLoading(false);\n    }\n    fetchCountries();\n  }, []);\n  return [data, loading];\n};\n","import { useState, useEffect } from \"react\";\n\nimport { fetchUrl } from \"../utils\";\nimport { ROOT_API } from \"../constants\";\n\nexport default countryCode => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    async function fetchRegions() {\n      if (countryCode != null) {\n        setLoading(true);\n        const data = await fetchUrl(`${ROOT_API}regions/${countryCode}`);\n        setData(data.regions);\n        setLoading(false);\n      }\n    }\n    fetchRegions();\n  }, [countryCode]);\n  return [data, loading];\n};\n","import React, { useState } from \"react\";\n\nimport _ from \"lodash\";\nimport { Form, Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { createSelector } from \"reselect\";\n\n// RMWC Components\nimport { Button, TextField, Select } from \"../UI-kit\";\n\n// Hooks\nimport useCountries from \"../../hooks/useCountries\";\nimport userRegions from \"../../hooks/userRegions\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\n// Local Selectors\nconst countiesOptions$ = createSelector(\n  _.identity,\n  countries => {\n    return _.map(countries, ({ name, code }) => ({\n      label: name,\n      value: code\n    }));\n  }\n);\n\nconst regionsOptions$ = createSelector(\n  _.identity,\n  regions => {\n    return _.map(regions, ({ region }) => ({\n      label: region,\n      value: region\n    }));\n  }\n);\n\nconst SignUpSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required(\"Required\"),\n  country: Yup.string().required(\"Required\"),\n  region: Yup.string().required(\"Required\")\n});\n\nconst SignUpForm = () => {\n  const [country, setCountry] = useState(null);\n  const [countries, loadingCountries] = useCountries();\n  const [regions, loadingRegions] = userRegions(country);\n\n  return (\n    <div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={SignUpSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched, isSubmitting, handleChange }) => (\n          <Form style={commonStyles.form}>\n            <FormikRMWCTextField\n              type=\"text\"\n              name=\"firstName\"\n              label=\"First Name\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"text\"\n              name=\"lastName\"\n              label=\"Last Name\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              errors={errors}\n              touched={touched}\n            />\n            <Field\n              name=\"country\"\n              render={({ field, form }) => {\n                return (\n                  <Select\n                    {...field}\n                    label=\"Country\"\n                    error={errors[\"country\"]}\n                    touched={touched[\"country\"]}\n                    options={countiesOptions$(countries)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                    onChange={e => {\n                      setCountry(e.target.value);\n                      handleChange(e);\n                      form.setFieldValue(\"region\", \"\");\n                    }}\n                  />\n                );\n              }}\n            />\n            <Field\n              name=\"region\"\n              render={({ field }) => {\n                return (\n                  <Select\n                    {...field}\n                    label=\"State/Province\"\n                    error={errors[\"region\"]}\n                    touched={touched[\"region\"]}\n                    options={regionsOptions$(regions)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                  />\n                );\n              }}\n            />\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst FormikRMWCTextField = ({ name, type, errors, touched, label }) => (\n  <Field\n    type={type}\n    name={name}\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type={type}\n        error={errors[name]}\n        touched={touched[name]}\n        label={label}\n      />\n    )}\n  />\n);\n\nconst getInitialValues = () => ({\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  country: \"\",\n  region: \"\"\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default SignUpForm;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport _ from \"lodash\";\nimport { Form, Formik, Field, FieldArray } from \"formik\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\nimport { IconButton } from \"rmwc\";\n\n// Styles\nimport commonStyles from \"../styles\";\nconst styles = {\n  todoItem: {\n    display: \"flex\"\n  },\n  todoRemoveBtn: {\n    marginTop: 15,\n    color: \"rgba(45,45,45,0.9)\"\n  }\n};\n\nconst initialValues = {\n  todos: [{ item: \"shopping\" }, { item: \"\" }]\n};\n\nconst ValidationSchema = Yup.object({\n  todos: Yup.array().of(\n    Yup.object({\n      item: Yup.string().required(\"Required\")\n    })\n  )\n});\n\nexport default class FormWithDynamicInput extends React.Component {\n  render() {\n    return (\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={ValidationSchema}\n          onSubmit={this.onSubmit}\n        >\n          {({ values, errors, touched, isSubmitting }) => (\n            <Form style={commonStyles.form}>\n              <FieldArray name=\"todos\">\n                {({ remove, push }) => (\n                  <div>\n                    {_.map(values.todos, (todo, index) => (\n                      <div style={styles.todoItem} key={index}>\n                        <GroupItemTextField\n                          type=\"text\"\n                          name={`todos.${index}.item`}\n                          index={index}\n                          label=\"Todo\"\n                          groupName=\"todos\"\n                          errors={errors}\n                          touched={touched}\n                        />\n                        <IconButton\n                          style={styles.todoRemoveBtn}\n                          icon={\"close\"}\n                          type=\"button\"\n                          onClick={() => remove(index)}\n                        />\n                      </div>\n                    ))}\n                    <Button\n                      label=\"Add Todo\"\n                      icon=\"add\"\n                      type=\"button\"\n                      onClick={() => push({ item: \"\" })}\n                    />\n                  </div>\n                )}\n              </FieldArray>\n\n              <Button\n                unelevated\n                type=\"submit\"\n                label=\"Submit\"\n                disabled={isSubmitting}\n                onClick={this.submit}\n              />\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n\n  onSubmit = (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  };\n}\n\nconst GroupItemTextField = ({\n  groupName,\n  name,\n  type,\n  errors,\n  touched,\n  label,\n  index\n}) => (\n  <Field\n    type={type}\n    name={name}\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type={type}\n        error={_.get(errors, [groupName, index, \"item\"], null)}\n        touched={_.get(touched, [groupName, index, \"item\"], false)}\n        label={label}\n      />\n    )}\n  />\n);\n","import React from \"react\";\nimport { Formik } from \"formik\";\n\n// RMWC Components\nimport { Button } from \"../UI-kit\";\n\nclass Wizard extends React.Component {\n  static Page = ({ children }) => children;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      values: props.initialValues\n    };\n  }\n\n  next = values =>\n    this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values\n    }));\n\n  previous = () =>\n    this.setState(state => ({\n      page: Math.max(state.page - 1, 0)\n    }));\n\n  validate = values => {\n    const activePage = React.Children.toArray(this.props.children)[\n      this.state.page\n    ];\n    return activePage.props.validate ? activePage.props.validate(values) : {};\n  };\n\n  handleSubmit = (values, bag) => {\n    const { children, onSubmit } = this.props;\n    const { page } = this.state;\n    const isLastPage = page === React.Children.count(children) - 1;\n    if (isLastPage) {\n      return onSubmit(values, bag);\n    } else {\n      bag.setTouched({});\n      bag.setSubmitting(false);\n      this.next(values);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { page, values } = this.state;\n    const activePage = React.Children.toArray(children)[page];\n    const isLastPage = page === React.Children.count(children) - 1;\n    return (\n      <Formik\n        initialValues={values}\n        enableReinitialize={false}\n        validate={this.validate}\n        onSubmit={this.handleSubmit}\n        render={({ values, handleSubmit, isSubmitting, handleReset }) => (\n          <form onSubmit={handleSubmit}>\n            {activePage}\n            <div className=\"buttons\">\n              {page > 0 && (\n                <Button\n                  label=\"« Previous\"\n                  type=\"button\"\n                  onClick={this.previous}\n                />\n              )}\n\n              {!isLastPage && <Button label=\"Next »\" type=\"submit\" />}\n              {isLastPage && (\n                <Button\n                  label=\"Submit\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  unelevated\n                />\n              )}\n            </div>\n          </form>\n        )}\n      />\n    );\n  }\n}\n\nexport default Wizard;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport Wizard from \"./Wizard\";\n\n// RMWC Components\nimport { TextField, Select } from \"../UI-kit\";\n\n// Styles\nconst styles = {\n  error: {\n    marginTop: 5,\n    fontSize: \"0.8em\",\n    color: \"red\"\n  }\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst onSubmit = (values, actions) => {\n  sleep(300).then(() => {\n    window.alert(JSON.stringify(values, null, 2));\n    actions.setSubmitting(false);\n  });\n};\n\nconst required = value => (value ? undefined : \"Required\");\n\nconst WizardForm = () => (\n  <div className=\"App\">\n    <Wizard\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        favoriteColor: \"\"\n      }}\n      onSubmit={onSubmit}\n    >\n      <Wizard.Page>\n        <div>\n          <FormikRMWCTextField\n            type=\"text\"\n            name=\"firstName\"\n            label=\"First Name\"\n            validate={required}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name=\"firstName\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n        <div>\n          <FormikRMWCTextField\n            type=\"text\"\n            name=\"lastName\"\n            label=\"Last Name\"\n            validate={required}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name=\"lastName\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n      </Wizard.Page>\n      <Wizard.Page\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          }\n          if (!values.favoriteColor) {\n            errors.favoriteColor = \"Required\";\n          }\n          return errors;\n        }}\n      >\n        <div>\n          <FormikRMWCTextField type=\"email\" name=\"email\" label=\"Email\" />\n          <ErrorMessage\n            style={styles.error}\n            name=\"email\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n        <div>\n          <Field\n            name=\"favoriteColor\"\n            render={({ field }) => {\n              return (\n                <Select\n                  {...field}\n                  label=\"Select a Color\"\n                  options={[\n                    { label: \"❤️ Red\", value: \"red\" },\n                    { label: \"💚 Green\", value: \"green\" },\n                    { label: \"💙 Blue\", value: \"blue\" }\n                  ]}\n                  style={{ minWidth: 233, maxWidth: 233 }}\n                />\n              );\n            }}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name=\"favoriteColor\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n      </Wizard.Page>\n    </Wizard>\n  </div>\n);\n\nexport default WizardForm;\n\nconst FormikRMWCTextField = ({ name, type, label, validate }) => (\n  <Field\n    type={type}\n    name={name}\n    validate={validate}\n    render={({ field }) => <TextField {...field} type={type} label={label} />}\n  />\n);\n","import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst LoginForm = () => (\n  <Form\n    initialValues={getInitialValues()}\n    validate={validate}\n    onSubmit={onSubmit}\n  >\n    {({ handleSubmit, submitting }) => (\n      <form onSubmit={handleSubmit} style={commonStyles.form}>\n        <Field\n          name=\"email\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"email\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Email\"}\n            />\n          )}\n        />\n        <Field\n          name=\"password\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"password\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Pasword\"}\n            />\n          )}\n        />\n        <Button disabled={submitting} label=\"Submit\" type=\"submit\" unelevated />\n      </form>\n    )}\n  </Form>\n);\n\nconst getInitialValues = () => ({ email: \"\", password: \"\" });\n\nconst validate = values => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n  return errors;\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(400);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nimport _ from \"lodash\";\nimport { Form, Field } from \"react-final-form\";\nimport { createSelector } from \"reselect\";\n\n// RMWC Components\nimport { Button, TextField, Select } from \"../UI-kit\";\n\n// Hooks\nimport useCountries from \"../../hooks/useCountries\";\nimport userRegions from \"../../hooks/userRegions\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\n// Local Selectors\nconst countiesOptions$ = createSelector(\n  _.identity,\n  countries => {\n    return _.map(countries, ({ name, code }) => ({\n      label: name,\n      value: code\n    }));\n  }\n);\n\nconst regionsOptions$ = createSelector(\n  _.identity,\n  regions => {\n    return _.map(regions, ({ region }) => ({\n      label: region,\n      value: region\n    }));\n  }\n);\n\nconst SignUpForm = () => {\n  const [country, setCountry] = useState(null);\n  const [countries, loadingCountries] = useCountries();\n  const [regions, loadingRegions] = userRegions(country);\n\n  return (\n    <div>\n      <Form\n        initialValues={getInitialValues()}\n        validate={validate}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, submitting, form }) => (\n          <form onSubmit={handleSubmit} style={commonStyles.form}>\n            <Field name=\"firstName\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"text\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"First Name\"}\n                />\n              )}\n            </Field>\n            <Field name=\"lastName\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"text\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"Last Name\"}\n                />\n              )}\n            </Field>\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"email\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"Email\"}\n                />\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"password\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"Password\"}\n                />\n              )}\n            </Field>\n            <Field name=\"country\">\n              {({ input, meta }) => (\n                <Select\n                  {...input}\n                  label=\"Country\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  options={countiesOptions$(countries)}\n                  style={{ minWidth: 233, maxWidth: 233 }}\n                  onChange={e => {\n                    form.change(\"country\", e.target.value);\n                    setCountry(e.target.value);\n                    form.change(\"region\", \"\");\n                  }}\n                />\n              )}\n            </Field>\n            <Field name=\"region\">\n              {({ input, meta }) => (\n                <Select\n                  {...input}\n                  label=\"State/Province\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  options={regionsOptions$(regions)}\n                  style={{ minWidth: 233, maxWidth: 233 }}\n                />\n              )}\n            </Field>\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={submitting}\n              unelevated\n            />\n          </form>\n        )}\n      </Form>\n    </div>\n  );\n};\n\nconst getInitialValues = () => ({\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  country: \"\",\n  region: \"\"\n});\n\nconst validate = values => {\n  let errors = {};\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (values.firstName.length < 2) {\n    errors.firstName = \"Too Short!\";\n  } else if (values.firstName.length > 50) {\n    errors.firstName = \"Too Long!\";\n  }\n\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  } else if (values.lastName.length < 2) {\n    errors.lastName = \"Too Short!\";\n  } else if (values.lastName.length > 50) {\n    errors.lastName = \"Too Long!\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Too Short!\";\n  } else if (values.password.length > 50) {\n    errors.password = \"Too Long!\";\n  }\n\n  if (!values.country) {\n    errors.country = \"Required\";\n  }\n\n  if (!values.region) {\n    errors.region = \"Required\";\n  }\n  return errors;\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(400);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nexport default SignUpForm;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport _ from \"lodash\";\nimport { Form, Field } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\nimport { IconButton } from \"rmwc\";\n\n// Styles\nimport commonStyles from \"../styles\";\nimport { access } from \"fs\";\nconst styles = {\n  todoItem: {\n    display: \"flex\"\n  },\n  todoRemoveBtn: {\n    marginTop: 15,\n    color: \"rgba(45,45,45,0.9)\"\n  }\n};\n\nconst initialValues = {\n  todos: [{ item: \"shopping\" }, { item: \"\" }]\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default class FormWithDynamicInput extends React.Component {\n  render() {\n    return (\n      <div>\n        <Form\n          initialValues={initialValues}\n          onSubmit={this.onSubmit}\n          mutators={{\n            ...arrayMutators\n          }}\n        >\n          {({\n            handleSubmit,\n            form: {\n              mutators: { push, pop }\n            }, // injected from final-form-arrays above\n            submitting\n          }) => (\n            <form onSubmit={handleSubmit} style={commonStyles.form}>\n              <FieldArray name=\"todos\">\n                {({ fields }) => (\n                  <div>\n                    {fields.map((name, index) => (\n                      <div style={styles.todoItem} key={index}>\n                        <Field name={`${name}.item`} validate={this.validate}>\n                          {({ input, meta }) => (\n                            <TextField\n                              {...input}\n                              type=\"text\"\n                              error={meta.error}\n                              touched={meta.touched}\n                              label={\"Todo\"}\n                            />\n                          )}\n                        </Field>\n                        <IconButton\n                          style={styles.todoRemoveBtn}\n                          icon={\"close\"}\n                          type=\"button\"\n                          onClick={() => pop(\"todos\")}\n                        />\n                      </div>\n                    ))}\n                    <Button\n                      label=\"Add Todo\"\n                      icon=\"add\"\n                      type=\"button\"\n                      onClick={() => push(\"todos\", { item: \"\" })}\n                    />\n                  </div>\n                )}\n              </FieldArray>\n\n              <Button\n                unelevated\n                type=\"submit\"\n                label=\"Submit\"\n                disabled={submitting}\n                onClick={this.submit}\n              />\n            </form>\n          )}\n        </Form>\n      </div>\n    );\n  }\n\n  validate = value => {\n    if (!value) {\n      return \"Required\";\n    }\n  };\n\n  onSubmit = async values => {\n    await sleep(400);\n    window.alert(JSON.stringify(values, 0, 2));\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\n\n// RMWC Components\nimport { Button } from \"../UI-kit\";\n\nexport default class Wizard extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired\n  };\n  static Page = ({ children }) => children;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      values: props.initialValues || {}\n    };\n  }\n  next = values =>\n    this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values\n    }));\n\n  previous = () =>\n    this.setState(state => ({\n      page: Math.max(state.page - 1, 0)\n    }));\n\n  /**\n   * NOTE: Both validate and handleSubmit switching are implemented\n   * here because 🏁 Redux Final Form does not accept changes to those\n   * functions once the form has been defined.\n   */\n\n  validate = values => {\n    const activePage = React.Children.toArray(this.props.children)[\n      this.state.page\n    ];\n    return activePage.props.validate ? activePage.props.validate(values) : {};\n  };\n\n  handleSubmit = values => {\n    const { children, onSubmit } = this.props;\n    const { page } = this.state;\n    const isLastPage = page === React.Children.count(children) - 1;\n    if (isLastPage) {\n      return onSubmit(values);\n    } else {\n      this.next(values);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { page, values } = this.state;\n    const activePage = React.Children.toArray(children)[page];\n    const isLastPage = page === React.Children.count(children) - 1;\n    return (\n      <Form\n        initialValues={values}\n        validate={this.validate}\n        onSubmit={this.handleSubmit}\n      >\n        {({ handleSubmit, submitting, values }) => (\n          <form onSubmit={handleSubmit}>\n            {activePage}\n            <div className=\"buttons\">\n              {page > 0 && (\n                <Button\n                  label=\"« Previous\"\n                  type=\"button\"\n                  onClick={this.previous}\n                />\n              )}\n              {!isLastPage && <Button label=\"Next »\" type=\"submit\" />}\n              {isLastPage && (\n                <Button\n                  label=\"Submit\"\n                  type=\"submit\"\n                  disabled={submitting}\n                  unelevated\n                />\n              )}\n            </div>\n          </form>\n        )}\n      </Form>\n    );\n  }\n}\n","import React from \"react\";\nimport { Field } from \"react-final-form\";\nimport Wizard from \"./Wizard\";\n\n// RMWC Components\nimport { TextField, Select } from \"../UI-kit\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(300);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nconst required = value => (value ? undefined : \"Required\");\n\nconst WizatForm = () => (\n  <div className=\"App\">\n    <Wizard\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        favoriteColor: \"\"\n      }}\n      onSubmit={onSubmit}\n    >\n      <Wizard.Page>\n        <div>\n          <Field name=\"firstName\" validate={required}>\n            {({ input, meta }) => (\n              <TextField\n                {...input}\n                type=\"text\"\n                error={meta.error}\n                touched={meta.touched}\n                label={\"First Name\"}\n              />\n            )}\n          </Field>\n          <Field name=\"lastName\" validate={required}>\n            {({ input, meta }) => (\n              <TextField\n                {...input}\n                type=\"text\"\n                error={meta.error}\n                touched={meta.touched}\n                label={\"Last Name\"}\n              />\n            )}\n          </Field>\n        </div>\n      </Wizard.Page>\n      <Wizard.Page\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          }\n          if (!values.favoriteColor) {\n            errors.favoriteColor = \"Required\";\n          }\n          return errors;\n        }}\n      >\n        <Field name=\"email\">\n          {({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"email\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Email\"}\n            />\n          )}\n        </Field>\n        <Field name=\"favoriteColor\">\n          {({ input, meta }) => {\n            return (\n              <Select\n                {...input}\n                label=\"Select a Color\"\n                options={[\n                  { label: \"❤️ Red\", value: \"red\" },\n                  { label: \"💚 Green\", value: \"green\" },\n                  { label: \"💙 Blue\", value: \"blue\" }\n                ]}\n                error={meta.error}\n                touched={meta.touched}\n                style={{ minWidth: 233, maxWidth: 233 }}\n              />\n            );\n          }}\n        </Field>\n      </Wizard.Page>\n    </Wizard>\n  </div>\n);\n\nexport default WizatForm;\n","import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport createDecorator from \"final-form-focus\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst focusOnError = createDecorator();\n\nconst LoginForm = () => (\n  <Form\n    initialValues={getInitialValues()}\n    validate={validate}\n    onSubmit={onSubmit}\n    decorators={[focusOnError]}\n  >\n    {({ handleSubmit, submitting }) => (\n      <form onSubmit={handleSubmit} style={commonStyles.form}>\n        <Field\n          name=\"firstNameFocus\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"text\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"First Name\"}\n            />\n          )}\n        />\n        <Field\n          name=\"lastNameFocus\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"text\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Last Name\"}\n            />\n          )}\n        />\n        <Field\n          name=\"emailFocus\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"email\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Email\"}\n            />\n          )}\n        />\n        <Field\n          name=\"passwordFocus\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"password\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Pasword\"}\n            />\n          )}\n        />\n        <Button disabled={submitting} label=\"Submit\" type=\"submit\" unelevated />\n      </form>\n    )}\n  </Form>\n);\n\nconst getInitialValues = () => ({\n  firstNameFocus: \"\",\n  lastNameFocus: \"\",\n  emailFocus: \"\",\n  passwordFocus: \"\"\n});\n\nconst validate = values => {\n  let errors = {};\n  if (!values.emailFocus) {\n    errors.emailFocus = \"Email is required\";\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.emailFocus)\n  ) {\n    errors.emailFocus = \"Invalid email address\";\n  }\n  if (!values.passwordFocus) {\n    errors.passwordFocus = \"Password is required\";\n  }\n  if (!values.firstNameFocus) {\n    errors.firstNameFocus = \"First name is required\";\n  }\n  if (!values.lastNameFocus) {\n    errors.lastNameFocus = \"Last name is required\";\n  }\n  return errors;\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(400);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\n// Components\nimport { TabBar, Tab } from \"rmwc\";\nimport ComparisonTable from \"./ComparisonTable\";\nimport SyntaxHighlight from \"./syntax-highlight/SyntaxHighligh\";\n\n// Formik Forms\nimport SimpleFormFormik from \"./formik/SimpleForm\";\nimport FormWithYupFormik from \"./formik/FormWithYup\";\nimport FormWithFetchFormik from \"./formik/FormWithFetch\";\nimport FormWithDynamicInputFormik from \"./formik/FormWithDynamicInput\";\nimport WizardFormik from \"./formik/WizardForm\";\n\n// React Final Forms\nimport SimpleFormRFF from \"./react-final-form/SimpleForm\";\nimport FormWithFetchRFF from \"./react-final-form/FormWithFetch\";\nimport FormWithDynamicInputRFF from \"./react-final-form/FormWithDynamicInput\";\nimport WizardRFF from \"./react-final-form/WizardForm\";\nimport FormWithErrorFocusRFF from \"./react-final-form/FormWithErrorFocus\";\n\n// Sourc String Formik\nimport simpleFormCodeFormik from \"./syntax-highlight/formik/simpleForm\";\nimport formWithYupFormik from \"./syntax-highlight/formik/formWithYup\";\nimport formWithFetchFormik from \"./syntax-highlight/formik/formWithFetch\";\nimport formWithDynamicInputFormik from \"./syntax-highlight/formik/formWithDynamicInput\";\nimport wizardFormik from \"./syntax-highlight/formik/wizard\";\n\n// Sourc String React Final Form\nimport simpleFormCodeRFF from \"./syntax-highlight/react-final-form/simpleForm\";\nimport formWithFetchRFF from \"./syntax-highlight/react-final-form/formWithFetch\";\nimport formWithDynamicInputRFF from \"./syntax-highlight/react-final-form/formWithDynamicInput\";\nimport wizardRFF from \"./syntax-highlight/react-final-form/wizardForm\";\nimport formWithErrorFocusRFF from \"./syntax-highlight/react-final-form/formWithErrorFocus\";\n\n// Styles\nconst styles = {\n  table: {\n    margin: \"20px 10px 50px\"\n  },\n  titleWapper: {\n    maxWidth: 1100,\n    width: \"100%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  title: {\n    fontSize: 28,\n    lineHeight: \"28px\",\n    fontWeight: 600,\n    marginBottom: 15,\n    width: \"100%\",\n    color: \"#252942\",\n    textAlign: \"left\"\n  },\n  subtitle: {\n    fontSize: 18,\n    lineHeight: \"28px\",\n    width: \"100%\",\n    color: \"#252942\",\n    textAlign: \"left\"\n  },\n  formAndCodeWrapper: {\n    maxWidth: 1100,\n    width: \"100%\",\n    background: \"#fafafa\",\n    display: \"flex\",\n    margin: \"20px 0 60px\",\n    position: \"relative\",\n    flexDirection: \"column\"\n  },\n  formAndCode: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  },\n  formWrapper: {\n    flexBasis: \"26%\",\n    flexGrow: 1,\n    justifyContent: \"flex-end\",\n    minHeigh: 250,\n    overflow: \"hidden\",\n    margin: 20\n  },\n  form: {\n    width: \"100%\",\n    flex: \"0 1 450px\",\n    maxWidth: \"450px\",\n    display: \"flex\",\n    perspective: \"500px\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  codeWrapper: {\n    flexGrow: 2,\n    flexBasis: \"65%\",\n    justifyContent: \"flex-end\",\n    minHeigh: 250,\n    overflow: \"hidden\",\n    margin: \"0px 10px\"\n  },\n  code: {\n    width: \"100%\",\n    flex: \"0 1 100%\",\n    maxWidth: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  item: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    margin: \"5px 20px\"\n  },\n  tabBar: nTabs => ({\n    margin: \"0 0 -8px auto\",\n    width: nTabs === 1 ? 200 : 320\n  })\n};\n\nconst Forms = () => {\n  return (\n    <div>\n      <div style={styles.table}>\n        <ComparisonTable />\n      </div>\n      <FormRender\n        title=\"Simple form\"\n        subtitle=\"Just a simple example of a form with validation.\"\n        formikForm={<SimpleFormFormik />}\n        rffForm={<SimpleFormRFF />}\n        formikCode={\n          <SyntaxHighlight\n            codeString={simpleFormCodeFormik}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/formik/SimpleForm.jsx\"\n          />\n        }\n        rffCode={\n          <SyntaxHighlight\n            codeString={simpleFormCodeRFF}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/react-final-form/SimpleForm.jsx\"\n          />\n        }\n      />\n      <FormRender\n        title=\"Form with schema validation\"\n        subtitle=\"You can combine normal validation with schema validation using Yup.\"\n        formikForm={<FormWithYupFormik />}\n        formikCode={\n          <SyntaxHighlight\n            codeString={formWithYupFormik}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/formik/FormWithYup.jsx\"\n          />\n        }\n      />\n      <FormRender\n        title=\"Form with network request\"\n        subtitle=\"When the value of country changes, we fetch the states/provinces of that country and populate the select box.\"\n        formikForm={<FormWithFetchFormik />}\n        rffForm={<FormWithFetchRFF />}\n        formikCode={\n          <SyntaxHighlight\n            codeString={formWithFetchFormik}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/formik/FormWithFetch.jsx\"\n          />\n        }\n        rffCode={\n          <SyntaxHighlight\n            codeString={formWithFetchRFF}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/react-final-form/FormWithFetch.jsx\"\n          />\n        }\n      />\n      <FormRender\n        title=\"Dynamic form\"\n        subtitle=\"Add new inputs dynamically to the form.\"\n        formikForm={<FormWithDynamicInputFormik />}\n        rffForm={<FormWithDynamicInputRFF />}\n        formikCode={\n          <SyntaxHighlight\n            codeString={formWithDynamicInputFormik}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/formik/FormWithDynamicInput.jsx\"\n          />\n        }\n        rffCode={\n          <SyntaxHighlight\n            codeString={formWithDynamicInputRFF}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/react-final-form/FormWithDynamicInput.jsx\"\n          />\n        }\n      />\n      <FormRender\n        title=\"Focus on error form\"\n        subtitle=\"If you press submit without filling out the form, it will focus on the first error.\"\n        rffForm={<FormWithErrorFocusRFF />}\n        rffCode={\n          <SyntaxHighlight\n            codeString={formWithErrorFocusRFF}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/react-final-form/FormWithErrorFocus.jsx\"\n          />\n        }\n      />\n      <FormRender\n        title=\"Form wizard\"\n        subtitle=\"Multi step form with validation.\"\n        formikForm={<WizardFormik />}\n        rffForm={<WizardRFF />}\n        formikCode={\n          <SyntaxHighlight\n            codeString={wizardFormik}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/formik/WizardForm.jsx\"\n          />\n        }\n        rffCode={\n          <SyntaxHighlight\n            codeString={wizardRFF}\n            codeUrl=\"https://github.com/hosseintalebi/formik-vs-react-final-form/blob/master/src/components/react-final-form/WizardForm.jsx\"\n          />\n        }\n      />\n    </div>\n  );\n};\n\nconst FormRender = ({\n  title,\n  subtitle,\n  formikForm,\n  rffForm,\n  formikCode,\n  rffCode\n}) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const hasFormik = formikCode != null;\n  const hasRFF = rffCode != null;\n  const tabs = getTabs({ hasFormik, hasRFF });\n  const form = activeTab === 0 && hasFormik ? formikForm : rffForm;\n  const code = activeTab === 0 && hasFormik ? formikCode : rffCode;\n\n  return (\n    <div style={styles.item}>\n      <div style={styles.titleWapper}>\n        <div style={styles.title}>{title}</div>\n        <div style={styles.subtitle}>{subtitle}</div>\n      </div>\n      <div style={styles.formAndCodeWrapper}>\n        <TabBar\n          style={styles.tabBar(tabs.length)}\n          activeTabIndex={activeTab}\n          onActivate={evt => setActiveTab(evt.detail.index)}\n        >\n          {tabs}\n        </TabBar>\n        <div style={styles.formAndCode}>\n          <div style={styles.formWrapper}>\n            <div style={styles.form}>{form}</div>\n          </div>\n          <div style={styles.codeWrapper}>\n            <div style={styles.code}>{code}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getTabs = ({ hasFormik, hasRFF }) => {\n  const tabs = [];\n  hasFormik && tabs.push(<Tab>Formik</Tab>);\n  hasRFF && tabs.push(<Tab>React Final Form</Tab>);\n  return tabs;\n};\n\nexport default Forms;\n","const codeString = `import React from \"react\";\nimport { Formik } from \"formik\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst LoginForm = () => (\n  <Formik\n    initialValues={getInitialValues()}\n    validate={validate}\n    onSubmit={onSubmit}\n  >\n    {({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => (\n      <form onSubmit={handleSubmit} style={commonStyles.form}>\n        <TextField\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.email}\n          error={errors.email}\n          touched={touched.email}\n          label={\"Email\"}\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.password}\n          error={errors.password}\n          touched={touched.password}\n          label={\"Pasword\"}\n        />\n        <Button\n          label=\"Submit\"\n          type=\"submit\"\n          disabled={isSubmitting}\n          unelevated\n        />\n      </form>\n    )}\n  </Formik>\n);\n\nconst getInitialValues = () => ({ email: \"\", password: \"\" });\n\nconst validate = values => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n  return errors;\n};\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginForm;\n`;\nexport default codeString;\n","const codeString = `import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst LoginForm = () => (\n  <Form\n    initialValues={getInitialValues()}\n    validate={validate}\n    onSubmit={onSubmit}\n  >\n    {({ handleSubmit, submitting }) => (\n      <form onSubmit={handleSubmit} style={commonStyles.form}>\n        <Field\n          name=\"email\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"email\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Email\"}\n            />\n          )}\n        />\n        <Field\n          name=\"password\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"password\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Pasword\"}\n            />\n          )}\n        />\n        <Button disabled={submitting} label=\"Submit\" type=\"submit\" unelevated />\n      </form>\n    )}\n  </Form>\n);\n\nconst getInitialValues = () => ({ email: \"\", password: \"\" });\n\nconst validate = values => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n  return errors;\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(400);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nexport default LoginForm;\n`;\nexport default codeString;\n","const codeString = `import React from \"react\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required(\"Required\")\n});\n\nconst LoginFormYup = () => {\n  return (\n    <div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting\n        }) => (\n          <Form style={commonStyles.form}>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              error={errors.email}\n              touched={touched.email}\n              label={\"Email\"}\n            />\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              error={errors.password}\n              touched={touched.password}\n              label={\"Pasword\"}\n            />\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst getInitialValues = () => ({\n  email: \"\",\n  password: \"\"\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginFormYup;\n`;\nexport default codeString;\n","const codeString = `import React, { useState } from \"react\";\n\nimport _ from \"lodash\";\nimport { Form, Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { createSelector } from \"reselect\";\n\n// RMWC Components\nimport { Button, TextField, Select } from \"../UI-kit\";\n\n// Hooks\nimport useCountries from \"../../hooks/useCountries\";\nimport userRegions from \"../../hooks/userRegions\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\n// Local Selectors\nconst countiesOptions$ = createSelector(\n  _.identity,\n  countries => {\n    return _.map(countries, ({ name, code }) => ({\n      label: name,\n      value: code\n    }));\n  }\n);\n\nconst regionsOptions$ = createSelector(\n  _.identity,\n  regions => {\n    return _.map(regions, ({ region }) => ({\n      label: region,\n      value: region\n    }));\n  }\n);\n\nconst LoginSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required(\"Required\"),\n  country: Yup.string().required(\"Required\"),\n  region: Yup.string().required(\"Required\")\n});\n\nconst SignUpForm = () => {\n  const [country, setCountry] = useState(null);\n  const [countries, loadingCountries] = useCountries();\n  const [regions, loadingRegions] = userRegions(country);\n\n  return (\n    <div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched, isSubmitting, handleChange }) => (\n          <Form style={commonStyles.form}>\n            <FormikRMWCTextField\n              type=\"text\"\n              name=\"firstName\"\n              label=\"First Name\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"text\"\n              name=\"lastName\"\n              label=\"Last Name\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              errors={errors}\n              touched={touched}\n            />\n            <Field\n              name=\"country\"\n              render={({ field, form }) => {\n                return (\n                  <Select\n                    {...field}\n                    label=\"Country\"\n                    error={errors[\"country\"]}\n                    touched={touched[\"country\"]}\n                    options={countiesOptions$(countries)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                    onChange={e => {\n                      setCountry(e.target.value);\n                      handleChange(e);\n                      form.setFieldValue(\"region\", \"\");\n                    }}\n                  />\n                );\n              }}\n            />\n            <Field\n              name=\"region\"\n              render={({ field }) => {\n                return (\n                  <Select\n                    {...field}\n                    label=\"State/Province\"\n                    error={errors[\"region\"]}\n                    touched={touched[\"region\"]}\n                    options={regionsOptions$(regions)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                  />\n                );\n              }}\n            />\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst FormikRMWCTextField = ({ name, type, errors, touched, label }) => (\n  <Field\n    type={type}\n    name={name}\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type={type}\n        error={errors[name]}\n        touched={touched[name]}\n        label={label}\n      />\n    )}\n  />\n);\n\nconst getInitialValues = () => ({\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  country: \"\",\n  region: \"\"\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default SignUpForm;\n`;\nexport default codeString;\n","const codeString = `import React, { useState } from \"react\";\n\nimport _ from \"lodash\";\nimport { Form, Field } from \"react-final-form\";\nimport { createSelector } from \"reselect\";\n\n// RMWC Components\nimport { Button, TextField, Select } from \"../UI-kit\";\n\n// Hooks\nimport useCountries from \"../../hooks/useCountries\";\nimport userRegions from \"../../hooks/userRegions\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\n// Local Selectors\nconst countiesOptions$ = createSelector(\n  _.identity,\n  countries => {\n    return _.map(countries, ({ name, code }) => ({\n      label: name,\n      value: code\n    }));\n  }\n);\n\nconst regionsOptions$ = createSelector(\n  _.identity,\n  regions => {\n    return _.map(regions, ({ region }) => ({\n      label: region,\n      value: region\n    }));\n  }\n);\n\nconst SignUpForm = () => {\n  const [country, setCountry] = useState(null);\n  const [countries, loadingCountries] = useCountries();\n  const [regions, loadingRegions] = userRegions(country);\n\n  return (\n    <div>\n      <Form\n        initialValues={getInitialValues()}\n        validate={validate}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, submitting, form }) => (\n          <form onSubmit={handleSubmit} style={commonStyles.form}>\n            <Field name=\"firstName\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"text\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"First Name\"}\n                />\n              )}\n            </Field>\n            <Field name=\"lastName\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"text\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"Last Name\"}\n                />\n              )}\n            </Field>\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"email\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"Email\"}\n                />\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <TextField\n                  {...input}\n                  type=\"password\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  label={\"Password\"}\n                />\n              )}\n            </Field>\n            <Field name=\"country\">\n              {({ input, meta }) => (\n                <Select\n                  {...input}\n                  label=\"Country\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  options={countiesOptions$(countries)}\n                  style={{ minWidth: 233, maxWidth: 233 }}\n                  onChange={e => {\n                    form.change(\"country\", e.target.value);\n                    setCountry(e.target.value);\n                    form.change(\"region\", \"\");\n                  }}\n                />\n              )}\n            </Field>\n            <Field name=\"region\">\n              {({ input, meta }) => (\n                <Select\n                  {...input}\n                  label=\"State/Province\"\n                  error={meta.error}\n                  touched={meta.touched}\n                  options={regionsOptions$(regions)}\n                  style={{ minWidth: 233, maxWidth: 233 }}\n                />\n              )}\n            </Field>\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={submitting}\n              unelevated\n            />\n          </form>\n        )}\n      </Form>\n    </div>\n  );\n};\n\nconst getInitialValues = () => ({\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  country: \"\",\n  region: \"\"\n});\n\nconst validate = values => {\n  let errors = {};\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (values.firstName.length < 2) {\n    errors.firstName = \"Too Short!\";\n  } else if (values.firstName.length > 50) {\n    errors.firstName = \"Too Long!\";\n  }\n\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  } else if (values.lastName.length < 2) {\n    errors.lastName = \"Too Short!\";\n  } else if (values.lastName.length > 50) {\n    errors.lastName = \"Too Long!\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Too Short!\";\n  } else if (values.password.length > 50) {\n    errors.password = \"Too Long!\";\n  }\n\n  if (!values.country) {\n    errors.country = \"Required\";\n  }\n\n  if (!values.region) {\n    errors.region = \"Required\";\n  }\n  return errors;\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(400);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nexport default SignUpForm;\n`;\nexport default codeString;\n","const codeString = `import React from \"react\";\nimport * as Yup from \"yup\";\nimport _ from \"lodash\";\nimport { Form, Formik, Field, FieldArray } from \"formik\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\nimport { IconButton } from \"rmwc\";\n\n// Styles\nimport commonStyles from \"../styles\";\nconst styles = {\n  todoItem: {\n    display: \"flex\"\n  },\n  todoRemoveBtn: {\n    marginTop: 15,\n    color: \"rgba(45,45,45,0.9)\"\n  }\n};\n\nconst initialValues = {\n  todos: [{ item: \"shopping\" }, { item: \"\" }]\n};\n\nconst ValidationSchema = Yup.object({\n  todos: Yup.array().of(\n    Yup.object({\n      item: Yup.string().required(\"Required\")\n    })\n  )\n});\n\nexport default class FormWithDynamicInput extends React.Component {\n  render() {\n    return (\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={ValidationSchema}\n          onSubmit={this.onSubmit}\n        >\n          {({ values, errors, touched, isSubmitting }) => (\n            <Form style={commonStyles.form}>\n              <FieldArray name=\"todos\">\n                {({ remove, push }) => (\n                  <div>\n                    {_.map(values.todos, (todo, index) => (\n                      <div style={styles.todoItem} key={index}>\n                        <GroupItemTextField\n                          type=\"text\"\n                          name={\\`todos.\\${ index }.item\\`}\n                          index={index}\n                          label=\"Todo\"\n                          groupName=\"todos\"\n                          errors={errors}\n                          touched={touched}\n                        />\n                        <IconButton\n                          style={styles.todoRemoveBtn}\n                          icon={\"close\"}\n                          type=\"button\"\n                          onClick={() => remove(index)}\n                        />\n                      </div>\n                    ))}\n                    <Button\n                      label=\"Add Todo\"\n                      icon=\"add\"\n                      type=\"button\"\n                      onClick={() => push({ item: \"\" })}\n                    />\n                  </div>\n                )}\n              </FieldArray>\n\n              <Button\n                unelevated\n                type=\"submit\"\n                label=\"Submit\"\n                disabled={isSubmitting}\n                onClick={this.submit}\n              />\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n\n  onSubmit = (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  };\n}\n\nconst GroupItemTextField = ({\n  groupName,\n  name,\n  type,\n  errors,\n  touched,\n  label,\n  index\n}) => (\n  <Field\n    type={type}\n    name={name}\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type={type}\n        error={_.get(errors, [groupName, index, \"item\"], null)}\n        touched={_.get(touched, [groupName, index, \"item\"], false)}\n        label={label}\n      />\n    )}\n  />\n);\n`;\nexport default codeString;\n","const codeString = `import React from \"react\";\nimport * as Yup from \"yup\";\nimport _ from \"lodash\";\nimport { Form, Field } from \"react-final-form\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\nimport { IconButton } from \"rmwc\";\n\n// Styles\nimport commonStyles from \"../styles\";\nimport { access } from \"fs\";\nconst styles = {\n  todoItem: {\n    display: \"flex\"\n  },\n  todoRemoveBtn: {\n    marginTop: 15,\n    color: \"rgba(45,45,45,0.9)\"\n  }\n};\n\nconst initialValues = {\n  todos: [{ item: \"shopping\" }, { item: \"\" }]\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default class FormWithDynamicInput extends React.Component {\n  render() {\n    return (\n      <div>\n        <Form\n          initialValues={initialValues}\n          onSubmit={this.onSubmit}\n          mutators={{\n            ...arrayMutators\n          }}\n        >\n          {({\n            handleSubmit,\n            form: {\n              mutators: { push, pop }\n            }, // injected from final-form-arrays above\n            submitting\n          }) => (\n            <form onSubmit={handleSubmit} style={commonStyles.form}>\n              <FieldArray name=\"todos\">\n                {({ fields }) => (\n                  <div>\n                    {fields.map((name, index) => (\n                      <div style={styles.todoItem} key={index}>\n                        <Field name={\\`\\${ name }.item\\`} validate={this.validate}>\n                          {({ input, meta }) => (\n                            <TextField\n                              {...input}\n                              type=\"text\"\n                              error={meta.error}\n                              touched={meta.touched}\n                              label={\"Todo\"}\n                            />\n                          )}\n                        </Field>\n                        <IconButton\n                          style={styles.todoRemoveBtn}\n                          icon={\"close\"}\n                          type=\"button\"\n                          onClick={() => pop(\"todos\")}\n                        />\n                      </div>\n                    ))}\n                    <Button\n                      label=\"Add Todo\"\n                      icon=\"add\"\n                      type=\"button\"\n                      onClick={() => push(\"todos\", { item: \"\" })}\n                    />\n                  </div>\n                )}\n              </FieldArray>\n\n              <Button\n                unelevated\n                type=\"submit\"\n                label=\"Submit\"\n                disabled={submitting}\n                onClick={this.submit}\n              />\n            </form>\n          )}\n        </Form>\n      </div>\n    );\n  }\n\n  validate = value => {\n    if (!value) {\n      return \"Required\";\n    }\n  };\n\n  onSubmit = async values => {\n    await sleep(400);\n    window.alert(JSON.stringify(values, 0, 2));\n  };\n}\n`;\nexport default codeString;\n","const codeString = `import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport createDecorator from \"final-form-focus\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-kit\";\n\n// Styles\nimport commonStyles from \"../styles\";\n\nconst focusOnError = createDecorator();\n\nconst LoginForm = () => (\n  <Form\n    initialValues={getInitialValues()}\n    validate={validate}\n    onSubmit={onSubmit}\n    decorators={[focusOnError]}\n  >\n    {({ handleSubmit, submitting }) => (\n      <form onSubmit={handleSubmit} style={commonStyles.form}>\n        <Field\n          name=\"email\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"email\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Email\"}\n            />\n          )}\n        />\n        <Field\n          name=\"password\"\n          render={({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"password\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Pasword\"}\n            />\n          )}\n        />\n        <Button disabled={submitting} label=\"Submit\" type=\"submit\" unelevated />\n      </form>\n    )}\n  </Form>\n);\n\nconst getInitialValues = () => ({ email: \"\", password: \"\" });\n\nconst validate = values => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n  return errors;\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(400);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nexport default LoginForm;\n`;\nexport default codeString;\n","const codeString = `import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport Wizard from \"./Wizard\";\n\n// RMWC Components\nimport { TextField, Select } from \"../UI-kit\";\n\n// Styles\nconst styles = {\n  error: {\n    marginTop: 5,\n    fontSize: \"0.8em\",\n    color: \"red\"\n  }\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst onSubmit = (values, actions) => {\n  sleep(300).then(() => {\n    window.alert(JSON.stringify(values, null, 2));\n    actions.setSubmitting(false);\n  });\n};\n\nconst required = value => (value ? undefined : \"Required\");\n\nconst WizardForm = () => (\n  <div className=\"App\">\n    <Wizard\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        favoriteColor: \"\"\n      }}\n      onSubmit={onSubmit}\n    >\n      <Wizard.Page>\n        <div>\n          <FormikRMWCTextField\n            type=\"text\"\n            name=\"firstName\"\n            label=\"First Name\"\n            validate={required}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name=\"firstName\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n        <div>\n          <FormikRMWCTextField\n            type=\"text\"\n            name=\"lastName\"\n            label=\"Last Name\"\n            validate={required}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name=\"lastName\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n      </Wizard.Page>\n      <Wizard.Page\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          }\n          if (!values.favoriteColor) {\n            errors.favoriteColor = \"Required\";\n          }\n          return errors;\n        }}\n      >\n        <div>\n          <FormikRMWCTextField type=\"email\" name=\"email\" label=\"Email\" />\n          <ErrorMessage\n            style={styles.error}\n            name=\"email\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n        <div>\n          <Field\n            name=\"favoriteColor\"\n            render={({ field }) => {\n              return (\n                <Select\n                  {...field}\n                  label=\"Select a Color\"\n                  options={[\n                    { label: \"❤️ Red\", value: \"red\" },\n                    { label: \"💚 Green\", value: \"green\" },\n                    { label: \"💙 Blue\", value: \"blue\" }\n                  ]}\n                  style={{ minWidth: 233, maxWidth: 233 }}\n                />\n              );\n            }}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name=\"favoriteColor\"\n            component=\"div\"\n            className=\"field-error\"\n          />\n        </div>\n      </Wizard.Page>\n    </Wizard>\n  </div>\n);\n\nexport default WizardForm;\n\nconst FormikRMWCTextField = ({ name, type, label, validate }) => (\n  <Field\n    type={type}\n    name={name}\n    validate={validate}\n    render={({ field }) => <TextField {...field} type={type} label={label} />}\n  />\n);\n`;\nexport default codeString;\n","const codeString = `import React from \"react\";\nimport { Field } from \"react-final-form\";\nimport Wizard from \"./Wizard\";\n\n// RMWC Components\nimport { TextField, Select } from \"../UI-kit\";\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(300);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\nconst required = value => (value ? undefined : \"Required\");\n\nconst WizatForm = () => (\n  <div className=\"App\">\n    <Wizard\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        favoriteColor: \"\"\n      }}\n      onSubmit={onSubmit}\n    >\n      <Wizard.Page>\n        <div>\n          <Field name=\"firstName\" validate={required}>\n            {({ input, meta }) => (\n              <TextField\n                {...input}\n                type=\"text\"\n                error={meta.error}\n                touched={meta.touched}\n                label={\"First Name\"}\n              />\n            )}\n          </Field>\n          <Field name=\"lastName\" validate={required}>\n            {({ input, meta }) => (\n              <TextField\n                {...input}\n                type=\"text\"\n                error={meta.error}\n                touched={meta.touched}\n                label={\"Last Name\"}\n              />\n            )}\n          </Field>\n        </div>\n      </Wizard.Page>\n      <Wizard.Page\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          }\n          if (!values.favoriteColor) {\n            errors.favoriteColor = \"Required\";\n          }\n          return errors;\n        }}\n      >\n        <Field name=\"email\">\n          {({ input, meta }) => (\n            <TextField\n              {...input}\n              type=\"email\"\n              error={meta.error}\n              touched={meta.touched}\n              label={\"Email\"}\n            />\n          )}\n        </Field>\n        <Field name=\"favoriteColor\">\n          {({ input, meta }) => {\n            return (\n              <Select\n                {...input}\n                label=\"Select a Color\"\n                options={[\n                  { label: \"❤️ Red\", value: \"red\" },\n                  { label: \"💚 Green\", value: \"green\" },\n                  { label: \"💙 Blue\", value: \"blue\" }\n                ]}\n                error={meta.error}\n                touched={meta.touched}\n                style={{ minWidth: 233, maxWidth: 233 }}\n              />\n            );\n          }}\n        </Field>\n      </Wizard.Page>\n    </Wizard>\n  </div>\n);\n\nexport default WizatForm;\n`;\n\nexport default codeString;\n","import React from \"react\";\nimport \"@material/button/dist/mdc.button.min.css\";\nimport \"@material/textfield/dist/mdc.textfield.min.css\";\nimport \"@material/select/dist/mdc.select.min.css\";\nimport \"@material/icon-button/dist/mdc.icon-button.min.css\";\nimport \"@material/tab-bar/dist/mdc.tab-bar.min.css\";\nimport \"@material/tab/dist/mdc.tab.min.css\";\nimport \"@material/tab-indicator/dist/mdc.tab-indicator.min.css\";\nimport \"@material/tab-scroller/dist/mdc.tab-scroller.min.css\";\n\nimport Forms from \"./components/Forms\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Forms />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}