{"version":3,"sources":["components/ComparisonTable.jsx","components/UI-Kit/Button.jsx","components/UI-Kit/TextField.jsx","components/UI-Kit/Select.jsx","components/formik/LoginForm.jsx","components/formik/LoginFormYup.jsx","utils.js","constants.js","components/formik/SignUpForm.jsx","hooks/useCountries.js","hooks/userRegions.js","components/Forms.jsx","App.js","serviceWorker.js","index.js"],"names":["styles","table","margin","th","fontWeight","padding","tht","color","fontSize","tr","trh","background","td","secondaryInfo","marginTop","comparisionData","name","size","minified","minifiedGZipped","typescript","asyncValidation","schemaValidation","popularity","wizard","Table","formik","finalForm","react_default","a","createElement","style","btn","Button","props","next","Object","assign","container","error","TextField","touched","textfield_next","Select","select_next","title","form","display","flexDirection","justifyContent","alignItems","getInitialValues","email","password","validate","values","errors","test","onSubmit","_ref2","setSubmitting","setTimeout","alert","JSON","stringify","LoginForm","formik_esm","initialValues","_ref","handleChange","handleBlur","handleSubmit","isSubmitting","UI_Kit_TextField","type","onChange","onBlur","value","label","UI_Kit_Button","disabled","unelevated","LoginSchema","Yup","shape","required","min","max","LoginFormYup","validationSchema","fetchUrl","_x","_fetchUrl","apply","this","arguments","_callee","url","response","json","regenerator_default","wrap","_context","prev","fetch","sent","abrupt","stop","ROOT_API","countiesOptions$","createSelector","_","identity","countries","map","code","regionsOptions$","regions","region","firstName","lastName","country","FormikRMWCTextField","_ref6","render","_ref7","field","_ref8","SignUpForm","_useState","useState","_useState2","slicedToArray","setCountry","_useCountries","data","setData","_useState3","_useState4","loading","setLoading","useEffect","_fetchCountries","asyncToGenerator","mark","concat","fetchCountries","useCountries","_useCountries2","_userRegions","countryCode","_fetchRegions","_data","fetchRegions","userRegions","_userRegions2","_ref3","SignUpForm_FormikRMWCTextField","_ref4","UI_Kit_Select","options","minWidth","maxWidth","e","target","setFieldValue","_ref5","Forms","ComparisonTable","formik_LoginForm","formik_LoginFormYup","formik_SignUpForm","App","className","components_Forms","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wNAEMA,+BAAS,CACbC,MAAO,CACLC,OAAQ,aAEVC,GAAI,CACFC,WAAY,IACZC,QAAS,YAEXC,IAAK,CACHF,WAAY,IACZG,MAAO,gBACPF,QAAS,WACTG,SAAU,SAEZC,GAAI,CACFJ,QAAS,SACTE,MAAK,sBAEPG,IAAK,CACHL,QAAS,SACTM,WAAY,yBACZJ,MAAK,sBAEPK,GAAI,CACFP,QAAS,aAEXQ,cAAe,CACbC,UAAW,EACXN,SAAU,WAGRO,EACI,CACNC,KAAM,SACNC,KAAM,CACJC,SAAU,QACVC,gBAAiB,WAEnBC,WAAY,SACZC,gBAAiB,SACjBC,iBAAkB,SAClBC,WAAY,UACZC,OAAQ,UAXNT,EAaO,CACTC,KAAM,mBACNC,KAAM,CACJC,SAAU,SACVC,gBAAiB,UAEnBC,WAAY,SACZC,gBAAiB,SACjBC,iBAAkB,SAClBC,WAAY,SACZC,OAAQ,UAgEGC,EA7DD,WAAM,IACVC,EAAsBX,EAAdY,EAAcZ,EAC9B,OACEa,EAAAC,EAAAC,cAAA,SAAOC,MAAO/B,EAAOC,OACnB2B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOS,IAChBmB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOM,KAAMoB,EAAOV,MAC/BY,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOM,KAAMqB,EAAUX,OAEpCY,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOU,KAChBkB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOG,IAAlB,QACAyB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAChBgB,EAAAC,EAAAC,cAAA,YAAOJ,EAAOT,KAAKC,UACnBU,EAAAC,EAAAC,cAAA,YAAOJ,EAAOT,KAAKE,kBAErBS,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAChBgB,EAAAC,EAAAC,cAAA,YAAOH,EAAUV,KAAKC,UACtBU,EAAAC,EAAAC,cAAA,YAAOH,EAAUV,KAAKE,mBAG1BS,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOS,IAChBmB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOG,IAAlB,eACAyB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKc,EAAON,YAC9BQ,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKe,EAAUP,aAEnCQ,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOU,KAChBkB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOG,IAAlB,oBACAyB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKc,EAAOL,iBAC9BO,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKe,EAAUN,kBAEnCO,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOS,IAChBmB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOG,IAAlB,qBACAyB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKc,EAAOJ,kBAC9BM,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKe,EAAUL,mBAEnCM,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOU,KAChBkB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOG,IAAlB,cACAyB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAChBgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAMJ,EAAOH,YACbK,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAOa,eAAnB,qBAGJe,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAChBgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAMH,EAAUJ,YAChBK,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAOa,eAAnB,sBAINe,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOS,IAChBmB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOG,IAAlB,UACAyB,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKc,EAAOF,QAC9BI,EAAAC,EAAAC,cAAA,MAAIC,MAAO/B,EAAOY,IAAKe,EAAUH,4BC9GrCxB,EAAS,CAAEgC,IAAK,CAAE9B,OAAQ,KAMjB+B,EAJA,SAAAC,GACb,OAAON,EAAAC,EAAAC,cAACK,EAAA,EAADC,OAAAC,OAAA,CAASN,MAAO/B,EAAOgC,KAASE,cCHnClC,EAAS,CACbsC,UAAW,CAAEpC,OAAQ,IACrBqC,MAAO,CACLzB,UAAW,EACXN,SAAU,QACVD,MAAO,QAcIiC,EAVG,SAAAN,GAAS,IACjBK,EAAmBL,EAAnBK,MAAOE,EAAYP,EAAZO,QACf,OACEb,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAOsC,WACjBV,EAAAC,EAAAC,cAACY,EAAA,EAAiBR,GACjBK,GAASE,GAAWb,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAOuC,OAAQA,cCdhDvC,EAAS,CACbsC,UAAW,CAAEpC,OAAQ,IACrBqC,MAAO,CACLzB,UAAW,EACXN,SAAU,QACVD,MAAO,QAcIoC,EAVA,SAAAT,GAAS,IACdK,EAAmBL,EAAnBK,MAAOE,EAAYP,EAAZO,QACf,OACEb,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAOsC,WACjBV,EAAAC,EAAAC,cAACc,EAAA,EAAeV,GACfK,GAASE,GAAWb,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAOuC,OAAQA,KCXhDvC,EAAS,CACb6C,MAAO,CACLzC,WAAY,IACZG,MAAO,mBACPL,OAAQ,kBAEV4C,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAqDVC,EAAmB,iBAAO,CAAEC,MAAO,GAAIC,SAAU,KAEjDC,EAAW,SAAAC,GACf,IAAIC,EAAS,GASb,OARKD,EAAOH,MAEA,2CAA2CK,KAAKF,EAAOH,SACjEI,EAAOJ,MAAQ,yBAFfI,EAAOJ,MAAQ,oBAIZG,EAAOF,WACVG,EAAOH,SAAW,wBAEbG,GAGHE,EAAW,SAACH,EAADI,GAA+B,IAApBC,EAAoBD,EAApBC,cAC1BC,WAAW,WACTC,MAAMC,KAAKC,UAAUT,EAAQ,KAAM,IACnCK,GAAc,IACb,MAGUK,EAxEG,kBAChBrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAO6C,OAAnB,qBACAjB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,cAAehB,IACfG,SAAUA,EACVI,SAAUA,GAET,SAAAU,GAAA,IACCb,EADDa,EACCb,OACAC,EAFDY,EAECZ,OACAf,EAHD2B,EAGC3B,QACA4B,EAJDD,EAICC,aACAC,EALDF,EAKCE,WACAC,EANDH,EAMCG,aACAC,EAPDJ,EAOCI,aAPD,OASC5C,EAAAC,EAAAC,cAAA,QAAM4B,SAAUa,EAAcxC,MAAO/B,EAAO8C,MAC1ClB,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,KAAK,QACL1D,KAAK,QACL2D,SAAUN,EACVO,OAAQN,EACRO,MAAOtB,EAAOH,MACdb,MAAOiB,EAAOJ,MACdX,QAASA,EAAQW,MACjB0B,MAAO,UAETlD,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,KAAK,WACL1D,KAAK,WACL2D,SAAUN,EACVO,OAAQN,EACRO,MAAOtB,EAAOF,SACdd,MAAOiB,EAAOH,SACdZ,QAASA,EAAQY,SACjByB,MAAO,YAETlD,EAAAC,EAAAC,cAACiD,EAAD,CACED,MAAM,SACNJ,KAAK,SACLM,SAAUR,EACVS,YAAU,gBCtDhBjF,EAAS,CACb6C,MAAO,CACLzC,WAAY,IACZG,MAAO,mBACPL,OAAQ,kBAEV4C,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAIVgC,EAAcC,WAAaC,MAAM,CACrChC,MAAO+B,WACJ/B,MAAM,iBACNiC,SAAS,YACZhC,SAAU8B,WACPG,IAAI,EAAG,kBAAM1D,EAAAC,EAAAC,cAAA,2BACbyD,IAAI,GAAI3D,EAAAC,EAAAC,cAAA,yBACRuD,SAAS,cAsDRlC,EAAmB,iBAAO,CAC9BC,MAAO,GACPC,SAAU,KAGNK,EAAW,SAACH,EAADI,GAA+B,IAApBC,EAAoBD,EAApBC,cAC1BC,WAAW,WACTC,MAAMC,KAAKC,UAAUT,EAAQ,KAAM,IACnCK,GAAc,IACb,MAGU4B,EA/DM,WACnB,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAO6C,OAAnB,yCACAjB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,cAAehB,IACfsC,iBAAkBP,EAClBxB,SAAUA,GAET,SAAAU,GAAA,IACCb,EADDa,EACCb,OACAC,EAFDY,EAECZ,OACAf,EAHD2B,EAGC3B,QACA4B,EAJDD,EAICC,aACAC,EALDF,EAKCE,WACAE,EANDJ,EAMCI,aAND,OAQC5C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMnC,MAAO/B,EAAO8C,MAClBlB,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,KAAK,QACL1D,KAAK,QACL2D,SAAUN,EACVO,OAAQN,EACRO,MAAOtB,EAAOH,MACdb,MAAOiB,EAAOJ,MACdX,QAASA,EAAQW,MACjB0B,MAAO,UAETlD,EAAAC,EAAAC,cAAC2C,EAAD,CACEC,KAAK,WACL1D,KAAK,WACL2D,SAAUN,EACVO,OAAQN,EACRO,MAAOtB,EAAOF,SACdd,MAAOiB,EAAOH,SACdZ,QAASA,EAAQY,SACjByB,MAAO,YAETlD,EAAAC,EAAAC,cAACiD,EAAD,CACED,MAAM,SACNJ,KAAK,SACLM,SAAUR,EACVS,YAAU,mECzEjB,SAAeS,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAAwBC,GAAxB,IAAAC,EAAAC,EAAA,OAAAC,EAAAvE,EAAAwE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAnE,MAAA,cAAAmE,EAAAnE,KAAA,EACkBqE,MAAMP,GADxB,cACCC,EADDI,EAAAG,KAAAH,EAAAnE,KAAA,EAEc+D,EAASC,OAFvB,cAECA,EAFDG,EAAAG,KAAAH,EAAAI,OAAA,SAGEP,GAHF,wBAAAG,EAAAK,SAAAX,6BCAA,IAAMY,EAAW,2CCclB5G,EAAS,CACb6C,MAAO,CACLzC,WAAY,IACZG,MAAO,mBACPL,OAAQ,kBAEV4C,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAKV2D,EAAmBC,YACvBC,IAAEC,SACF,SAAAC,GACE,OAAOF,IAAEG,IAAID,EAAW,SAAA7C,GAAA,MAAqB,CAC3CU,MADsBV,EAAGpD,KAEzB6D,MAFsBT,EAAS+C,UAO/BC,EAAkBN,YACtBC,IAAEC,SACF,SAAAK,GACE,OAAON,IAAEG,IAAIG,EAAS,SAAA1D,GAAA,IAAG2D,EAAH3D,EAAG2D,OAAH,MAAiB,CACrCxC,MAAOwC,EACPzC,MAAOyC,OAKPpC,EAAcC,WAAaC,MAAM,CACrCmC,UAAWpC,WACRG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRF,SAAS,YACZmC,SAAUrC,WACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRF,SAAS,YACZjC,MAAO+B,WACJ/B,MAAM,iBACNiC,SAAS,YACZhC,SAAU8B,WACPG,IAAI,EAAG,kBAAM1D,EAAAC,EAAAC,cAAA,2BACbyD,IAAI,GAAI3D,EAAAC,EAAAC,cAAA,yBACRuD,SAAS,YACZoC,QAAStC,WAAaE,SAAS,YAC/BiC,OAAQnC,WAAaE,SAAS,cAgG1BqC,EAAsB,SAAAC,GAAA,IAAG3G,EAAH2G,EAAG3G,KAAM0D,EAATiD,EAASjD,KAAMlB,EAAfmE,EAAenE,OAAQf,EAAvBkF,EAAuBlF,QAASqC,EAAhC6C,EAAgC7C,MAAhC,OAC1BlD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEQ,KAAMA,EACN1D,KAAMA,EACN4G,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACNlG,EAAAC,EAAAC,cAAC2C,EAADrC,OAAAC,OAAA,GACMyF,EADN,CAEEpD,KAAMA,EACNnC,MAAOiB,EAAOxC,GACdyB,QAASA,EAAQzB,GACjB8D,MAAOA,SAMT3B,EAAmB,iBAAO,CAC9BoE,UAAW,GACXC,SAAU,GACVpE,MAAO,GACPC,SAAU,GACVoE,QAAS,GACTH,OAAQ,KAGJ5D,EAAW,SAACH,EAADwE,GAA+B,IAApBnE,EAAoBmE,EAApBnE,cAC1BC,WAAW,WACTC,MAAMC,KAAKC,UAAUT,EAAQ,KAAM,IACnCK,GAAc,IACb,MAGUoE,EA7HI,WAAM,IAAAC,EACOC,mBAAS,MADhBC,EAAA/F,OAAAgG,EAAA,EAAAhG,CAAA6F,EAAA,GAChBR,EADgBU,EAAA,GACPE,EADOF,EAAA,GAAAG,EChEV,WAAM,IAAAL,EACKC,mBAAS,MADdC,EAAA/F,OAAAgG,EAAA,EAAAhG,CAAA6F,EAAA,GACZM,EADYJ,EAAA,GACNK,EADML,EAAA,GAAAM,EAEWP,mBAAS,MAFpBQ,EAAAtG,OAAAgG,EAAA,EAAAhG,CAAAqG,EAAA,GAEZE,EAFYD,EAAA,GAEHE,EAFGF,EAAA,GAanB,OATAG,oBAAU,WAAM,SAAAC,IAAA,OAAAA,EAAA1G,OAAA2G,EAAA,EAAA3G,CAAAgE,EAAAvE,EAAAmH,KACd,SAAAhD,IAAA,IAAAuC,EAAA,OAAAnC,EAAAvE,EAAAwE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAnE,MAAA,cACEyG,GAAW,GADbtC,EAAAnE,KAAA,EAEqBuD,EAAQ,GAAAuD,OAAIrC,EAAJ,cAF7B,OAEQ2B,EAFRjC,EAAAG,KAGE+B,EAAQD,EAAKtB,WACb2B,GAAW,GAJb,wBAAAtC,EAAAK,SAAAX,OADcH,MAAAC,KAAAC,YAAA,WAAA+C,EAAAjD,MAAAC,KAAAC,WAOdmD,IACC,IACI,CAACX,EAAMI,GDqDwBQ,GAFfC,EAAAhH,OAAAgG,EAAA,EAAAhG,CAAAkG,EAAA,GAEhBrB,EAFgBmC,EAAA,GAAAC,GAAAD,EAAA,GEhEV,SAAAE,GAAe,IAAArB,EACJC,mBAAS,MADLC,EAAA/F,OAAAgG,EAAA,EAAAhG,CAAA6F,EAAA,GACrBM,EADqBJ,EAAA,GACfK,EADeL,EAAA,GAAAM,EAEEP,mBAAS,MAFXQ,EAAAtG,OAAAgG,EAAA,EAAAhG,CAAAqG,EAAA,GAErBE,EAFqBD,EAAA,GAEZE,EAFYF,EAAA,GAe5B,OAXAG,oBAAU,WAAM,SAAAU,IAAA,OAAAA,EAAAnH,OAAA2G,EAAA,EAAA3G,CAAAgE,EAAAvE,EAAAmH,KACd,SAAAhD,IAAA,IAAAwD,EAAA,OAAApD,EAAAvE,EAAAwE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAnE,MAAA,UACqB,MAAfmH,EADN,CAAAhD,EAAAnE,KAAA,eAEIyG,GAAW,GAFftC,EAAAnE,KAAA,EAGuBuD,EAAQ,GAAAuD,OAAIrC,EAAJ,YAAAqC,OAAuBK,IAHtD,OAGUf,EAHVjC,EAAAG,KAII+B,EAAQD,EAAKlB,SACbuB,GAAW,GALf,wBAAAtC,EAAAK,SAAAX,OADcH,MAAAC,KAAAC,YAAA,WAAAwD,EAAA1D,MAAAC,KAAAC,WASd0D,IACC,CAACH,IACG,CAACf,EAAMI,GFoDoBe,CAAYjC,IAHvBkC,EAAAvH,OAAAgG,EAAA,EAAAhG,CAAAiH,EAAA,GAGhBhC,EAHgBsC,EAAA,GAAAA,EAAA,GAKvB,OACE/H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAO6C,OAAnB,+CAGAjB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,cAAehB,IACfsC,iBAAkBP,EAClBxB,SAAUA,GAET,SAAAkG,GAAA,IAAGpG,EAAHoG,EAAGpG,OAAQf,EAAXmH,EAAWnH,QAAS+B,EAApBoF,EAAoBpF,aAAcH,EAAlCuF,EAAkCvF,aAAlC,OACCzC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMnC,MAAO/B,EAAO8C,MAClBlB,EAAAC,EAAAC,cAAC+H,EAAD,CACEnF,KAAK,OACL1D,KAAK,YACL8D,MAAM,aACNtB,OAAQA,EACRf,QAASA,IAEXb,EAAAC,EAAAC,cAAC+H,EAAD,CACEnF,KAAK,OACL1D,KAAK,WACL8D,MAAM,YACNtB,OAAQA,EACRf,QAASA,IAEXb,EAAAC,EAAAC,cAAC+H,EAAD,CACEnF,KAAK,QACL1D,KAAK,QACL8D,MAAM,QACNtB,OAAQA,EACRf,QAASA,IAEXb,EAAAC,EAAAC,cAAC+H,EAAD,CACEnF,KAAK,WACL1D,KAAK,WACL8D,MAAM,WACNtB,OAAQA,EACRf,QAASA,IAEXb,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACElD,KAAK,UACL4G,OAAQ,SAAAkC,GAAqB,IAAlBhC,EAAkBgC,EAAlBhC,MAAOhF,EAAWgH,EAAXhH,KAChB,OACElB,EAAAC,EAAAC,cAACiI,EAAD3H,OAAAC,OAAA,GACMyF,EADN,CAEEhD,MAAM,UACNvC,MAAOiB,EAAM,QACbf,QAASA,EAAO,QAChBuH,QAASnD,EAAiBI,GAC1BlF,MAAO,CAAEkI,SAAU,IAAKC,SAAU,KAClCvF,SAAU,SAAAwF,GACR9B,EAAW8B,EAAEC,OAAOvF,OACpBR,EAAa8F,GACbrH,EAAKuH,cAAc,SAAU,WAMvCzI,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACElD,KAAK,SACL4G,OAAQ,SAAA0C,GAAe,IAAZxC,EAAYwC,EAAZxC,MACT,OACElG,EAAAC,EAAAC,cAACiI,EAAD3H,OAAAC,OAAA,GACMyF,EADN,CAEEhD,MAAM,iBACNvC,MAAOiB,EAAM,OACbf,QAASA,EAAO,OAChBuH,QAAS5C,EAAgBC,GACzBtF,MAAO,CAAEkI,SAAU,IAAKC,SAAU,WAK1CtI,EAAAC,EAAAC,cAACiD,EAAD,CACED,MAAM,SACNJ,KAAK,SACLM,SAAUR,EACVS,YAAU,SGlJlBjF,EAAS,CACb8C,KAAM,CACJ5C,OAAQ,mBAsBGqK,EAnBD,WACZ,OACE3I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAO8C,MACjBlB,EAAAC,EAAAC,cAAC0I,EAAD,OAEF5I,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAO8C,MACjBlB,EAAAC,EAAAC,cAAC2I,EAAD,OAEF7I,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAO8C,MACjBlB,EAAAC,EAAAC,cAAC4I,EAAD,OAEF9I,EAAAC,EAAAC,cAAA,OAAKC,MAAO/B,EAAO8C,MACjBlB,EAAAC,EAAAC,cAAC6I,EAAD,gBCTOC,MARf,WACE,OACEhJ,EAAAC,EAAAC,cAAA,OAAK+I,UAAU,OACbjJ,EAAAC,EAAAC,cAACgJ,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASxD,OAAOhG,EAAAC,EAAAC,cAACuJ,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.65fd38e5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst styles = {\n  table: {\n    margin: \"20px auto\"\n  },\n  th: {\n    fontWeight: 500,\n    padding: \"10px 5px\"\n  },\n  tht: {\n    fontWeight: 500,\n    color: \"rgb(45,45,45)\",\n    padding: \"10px 5px\",\n    fontSize: \"1.1em\"\n  },\n  tr: {\n    padding: \"10px 0\",\n    color: `rgba(45,45,45,0.8)`\n  },\n  trh: {\n    padding: \"10px 0\",\n    background: \"rgba(98, 42, 109, 0.3)\",\n    color: `rgba(45,45,45,0.8)`\n  },\n  td: {\n    padding: \"10px 30px\"\n  },\n  secondaryInfo: {\n    marginTop: 5,\n    fontSize: \"0.8em\"\n  }\n};\nconst comparisionData = {\n  formik: {\n    name: \"Formik\",\n    size: {\n      minified: \"43 kB\",\n      minifiedGZipped: \"12.6 kB\"\n    },\n    typescript: \"✓\",\n    asyncValidation: \"✓\",\n    schemaValidation: \"✓\",\n    popularity: \"428,133\",\n    wizard: \"✓\"\n  },\n  finalForm: {\n    name: \"React Final Form\",\n    size: {\n      minified: \"8.1 kB\",\n      minifiedGZipped: \"3.1 kB\"\n    },\n    typescript: \"✓\",\n    asyncValidation: \"✓\",\n    schemaValidation: \"✗\",\n    popularity: \"83,674\",\n    wizard: \"✓\"\n  }\n};\nconst Table = () => {\n  const { formik, finalForm } = comparisionData;\n  return (\n    <table style={styles.table}>\n      <tbody>\n        <tr style={styles.tr}>\n          <th />\n          <th style={styles.tht}>{formik.name}</th>\n          <th style={styles.tht}>{finalForm.name}</th>\n        </tr>\n        <tr style={styles.trh}>\n          <th style={styles.th}>Size</th>\n          <td style={styles.td}>\n            <span>{formik.size.minified}</span>\n            <span>{formik.size.minifiedGZipped}</span>\n          </td>\n          <td style={styles.td}>\n            <span>{finalForm.size.minified}</span>\n            <span>{finalForm.size.minifiedGZipped}</span>\n          </td>\n        </tr>\n        <tr style={styles.tr}>\n          <th style={styles.th}>TypeScripct</th>\n          <td style={styles.td}>{formik.typescript}</td>\n          <td style={styles.td}>{finalForm.typescript}</td>\n        </tr>\n        <tr style={styles.trh}>\n          <th style={styles.th}>Async Validation</th>\n          <td style={styles.td}>{formik.asyncValidation}</td>\n          <td style={styles.td}>{finalForm.asyncValidation}</td>\n        </tr>\n        <tr style={styles.tr}>\n          <th style={styles.th}>Schema Validation</th>\n          <td style={styles.td}>{formik.schemaValidation}</td>\n          <td style={styles.td}>{finalForm.schemaValidation}</td>\n        </tr>\n        <tr style={styles.trh}>\n          <th style={styles.th}>Popularity</th>\n          <td style={styles.td}>\n            <div>\n              <div>{formik.popularity}</div>\n              <div style={styles.secondaryInfo}>Weekly Download</div>\n            </div>\n          </td>\n          <td style={styles.td}>\n            <div>\n              <div>{finalForm.popularity}</div>\n              <div style={styles.secondaryInfo}>Weekly Download</div>\n            </div>\n          </td>\n        </tr>\n        <tr style={styles.tr}>\n          <th style={styles.th}>Wizard</th>\n          <td style={styles.td}>{formik.wizard}</td>\n          <td style={styles.td}>{finalForm.wizard}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { Button as RmwcBtn } from \"rmwc\";\n\nconst styles = { btn: { margin: 10 } };\n\nconst Button = props => {\n  return <RmwcBtn style={styles.btn} {...props} />;\n};\n\nexport default Button;\n","import React from \"react\";\nimport { TextField as RmwcTxtField } from \"rmwc\";\n\nconst styles = {\n  container: { margin: 10 },\n  error: {\n    marginTop: 5,\n    fontSize: \"0.8em\",\n    color: \"red\"\n  }\n};\n\nconst TextField = props => {\n  const { error, touched } = props;\n  return (\n    <div style={styles.container}>\n      <RmwcTxtField {...props} />\n      {error && touched && <div style={styles.error}>{error}</div>}\n    </div>\n  );\n};\n\nexport default TextField;\n","import React from \"react\";\nimport { Select as RmwcSelect } from \"rmwc\";\n\nconst styles = {\n  container: { margin: 10 },\n  error: {\n    marginTop: 5,\n    fontSize: \"0.8em\",\n    color: \"red\"\n  }\n};\n\nconst Select = props => {\n  const { error, touched } = props;\n  return (\n    <div style={styles.container}>\n      <RmwcSelect {...props} />\n      {error && touched && <div style={styles.error}>{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport { Formik } from \"formik\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-Kit\";\n\nconst styles = {\n  title: {\n    fontWeight: 500,\n    color: \"rgba(45,45,45,1)\",\n    margin: \"40px 10px 20px\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\nconst LoginForm = () => (\n  <div>\n    <div style={styles.title}>Formik Login Form</div>\n    <Formik\n      initialValues={getInitialValues()}\n      validate={validate}\n      onSubmit={onSubmit}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit} style={styles.form}>\n          <TextField\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n            error={errors.email}\n            touched={touched.email}\n            label={\"Email\"}\n          />\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n            error={errors.password}\n            touched={touched.password}\n            label={\"Pasword\"}\n          />\n          <Button\n            label=\"Submit\"\n            type=\"submit\"\n            disabled={isSubmitting}\n            unelevated\n          />\n        </form>\n      )}\n    </Formik>\n  </div>\n);\n\nconst getInitialValues = () => ({ email: \"\", password: \"\" });\n\nconst validate = values => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n  return errors;\n};\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\n// RMWC Components\nimport { Button, TextField } from \"../UI-Kit\";\n\nconst styles = {\n  title: {\n    fontWeight: 500,\n    color: \"rgba(45,45,45,1)\",\n    margin: \"40px 10px 20px\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required(\"Required\")\n});\n\nconst LoginFormYup = () => {\n  return (\n    <div>\n      <div style={styles.title}>Formik Login Form (Schema Validation)</div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting\n        }) => (\n          <Form style={styles.form}>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              error={errors.email}\n              touched={touched.email}\n              label={\"Email\"}\n            />\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              error={errors.password}\n              touched={touched.password}\n              label={\"Pasword\"}\n            />\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst getInitialValues = () => ({\n  email: \"\",\n  password: \"\"\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginFormYup;\n","export async function fetchUrl(url) {\n  const response = await fetch(url);\n  const json = await response.json();\n  return json;\n}\n","export const ROOT_API = \"https://location-api-hoss.herokuapp.com/\";\n","import React, { useState } from \"react\";\n\nimport _ from \"lodash\";\nimport { Form, Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { createSelector } from \"reselect\";\n\n// RMWC Components\nimport { Button, TextField, Select } from \"../UI-Kit\";\n\n// Hooks\nimport useCountries from \"../../hooks/useCountries\";\nimport userRegions from \"../../hooks/userRegions\";\n\nconst styles = {\n  title: {\n    fontWeight: 500,\n    color: \"rgba(45,45,45,1)\",\n    margin: \"40px 10px 20px\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\n\n// Local Selectors\nconst countiesOptions$ = createSelector(\n  _.identity,\n  countries => {\n    return _.map(countries, ({ name, code }) => ({\n      label: name,\n      value: code\n    }));\n  }\n);\n\nconst regionsOptions$ = createSelector(\n  _.identity,\n  regions => {\n    return _.map(regions, ({ region }) => ({\n      label: region,\n      value: region\n    }));\n  }\n);\n\nconst LoginSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required(\"Required\"),\n  country: Yup.string().required(\"Required\"),\n  region: Yup.string().required(\"Required\")\n});\n\nconst SignUpForm = () => {\n  const [country, setCountry] = useState(null);\n  const [countries, loadingCountries] = useCountries();\n  const [regions, loadingRegions] = userRegions(country);\n\n  return (\n    <div>\n      <div style={styles.title}>\n        Formik Signup Form (Fetch data on the form)\n      </div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched, isSubmitting, handleChange }) => (\n          <Form style={styles.form}>\n            <FormikRMWCTextField\n              type=\"text\"\n              name=\"firstName\"\n              label=\"First Name\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"text\"\n              name=\"lastName\"\n              label=\"Last Name\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              errors={errors}\n              touched={touched}\n            />\n            <Field\n              name=\"country\"\n              render={({ field, form }) => {\n                return (\n                  <Select\n                    {...field}\n                    label=\"Country\"\n                    error={errors[\"country\"]}\n                    touched={touched[\"country\"]}\n                    options={countiesOptions$(countries)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                    onChange={e => {\n                      setCountry(e.target.value);\n                      handleChange(e);\n                      form.setFieldValue(\"region\", \"\");\n                    }}\n                  />\n                );\n              }}\n            />\n            <Field\n              name=\"region\"\n              render={({ field }) => {\n                return (\n                  <Select\n                    {...field}\n                    label=\"State/Province\"\n                    error={errors[\"region\"]}\n                    touched={touched[\"region\"]}\n                    options={regionsOptions$(regions)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                  />\n                );\n              }}\n            />\n            <Button\n              label=\"Submit\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst FormikRMWCTextField = ({ name, type, errors, touched, label }) => (\n  <Field\n    type={type}\n    name={name}\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type={type}\n        error={errors[name]}\n        touched={touched[name]}\n        label={label}\n      />\n    )}\n  />\n);\n\nconst getInitialValues = () => ({\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  country: \"\",\n  region: \"\"\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default SignUpForm;\n","import { useState, useEffect } from \"react\";\n\nimport { fetchUrl } from \"../utils\";\nimport { ROOT_API } from \"../constants\";\n\nexport default () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    async function fetchCountries() {\n      setLoading(true);\n      const data = await fetchUrl(`${ROOT_API}countries`);\n      setData(data.countries);\n      setLoading(false);\n    }\n    fetchCountries();\n  }, []);\n  return [data, loading];\n};\n","import { useState, useEffect } from \"react\";\n\nimport { fetchUrl } from \"../utils\";\nimport { ROOT_API } from \"../constants\";\n\nexport default countryCode => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    async function fetchRegions() {\n      if (countryCode != null) {\n        setLoading(true);\n        const data = await fetchUrl(`${ROOT_API}regions/${countryCode}`);\n        setData(data.regions);\n        setLoading(false);\n      }\n    }\n    fetchRegions();\n  }, [countryCode]);\n  return [data, loading];\n};\n","import React from \"react\";\n\nimport ComparisonTable from \"./ComparisonTable\";\nimport LoginForm from \"./formik/LoginForm\";\nimport LoginFormYup from \"./formik/LoginFormYup\";\nimport SignUpFrom from \"./formik/SignUpForm\";\n\nconst styles = {\n  form: {\n    margin: \"20px 10px 50px\"\n  }\n};\nconst Forms = () => {\n  return (\n    <div>\n      <div style={styles.form}>\n        <ComparisonTable />\n      </div>\n      <div style={styles.form}>\n        <LoginForm />\n      </div>\n      <div style={styles.form}>\n        <LoginFormYup />\n      </div>\n      <div style={styles.form}>\n        <SignUpFrom />\n      </div>\n    </div>\n  );\n};\n\nexport default Forms;\n","import React from \"react\";\nimport \"@material/button/dist/mdc.button.min.css\";\nimport \"@material/textfield/dist/mdc.textfield.min.css\";\nimport \"@material/select/dist/mdc.select.min.css\";\n\nimport Forms from \"./components/Forms\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Forms />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}