(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{161:function(e,n,t){e.exports=t(499)},166:function(e,n,t){},498:function(e,n,t){},499:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),i=t(52),o=t.n(i),l=(t(166),t(167),t(168),t(169),t(170),{table:{margin:"20px auto"},th:{fontWeight:500,padding:"10px 5px"},tht:{fontWeight:500,color:"rgb(45,45,45)",padding:"10px 5px",fontSize:"1.1em"},tr:{padding:"10px 0",color:"rgba(45,45,45,0.8)"},trh:{padding:"10px 0",background:"rgba(98, 42, 109, 0.3)",color:"rgba(45,45,45,0.8)"},td:{padding:"10px 30px"},secondaryInfo:{marginTop:5,fontSize:"0.8em"}}),s={name:"Formik",size:{minified:"43 kB",minifiedGZipped:"12.6 kB"},typescript:"\u2713",asyncValidation:"\u2713",schemaValidation:"\u2713",popularity:"428,133",wizard:"\u2713"},m={name:"React Final Form",size:{minified:"8.1 kB",minifiedGZipped:"3.1 kB"},typescript:"\u2713",asyncValidation:"\u2713",schemaValidation:"\u2717",popularity:"83,674",wizard:"\u2713"},u=function(){var e=s,n=m;return r.a.createElement("table",{style:l.table},r.a.createElement("tbody",null,r.a.createElement("tr",{style:l.tr},r.a.createElement("th",null),r.a.createElement("th",{style:l.tht},e.name),r.a.createElement("th",{style:l.tht},n.name)),r.a.createElement("tr",{style:l.trh},r.a.createElement("th",{style:l.th},"Size"),r.a.createElement("td",{style:l.td},r.a.createElement("span",null,e.size.minified),r.a.createElement("span",null,e.size.minifiedGZipped)),r.a.createElement("td",{style:l.td},r.a.createElement("span",null,n.size.minified),r.a.createElement("span",null,n.size.minifiedGZipped))),r.a.createElement("tr",{style:l.tr},r.a.createElement("th",{style:l.th},"TypeScripct"),r.a.createElement("td",{style:l.td},e.typescript),r.a.createElement("td",{style:l.td},n.typescript)),r.a.createElement("tr",{style:l.trh},r.a.createElement("th",{style:l.th},"Async Validation"),r.a.createElement("td",{style:l.td},e.asyncValidation),r.a.createElement("td",{style:l.td},n.asyncValidation)),r.a.createElement("tr",{style:l.tr},r.a.createElement("th",{style:l.th},"Schema Validation"),r.a.createElement("td",{style:l.td},e.schemaValidation),r.a.createElement("td",{style:l.td},n.schemaValidation)),r.a.createElement("tr",{style:l.trh},r.a.createElement("th",{style:l.th},"Popularity"),r.a.createElement("td",{style:l.td},r.a.createElement("div",null,r.a.createElement("div",null,e.popularity),r.a.createElement("div",{style:l.secondaryInfo},"Weekly Download"))),r.a.createElement("td",{style:l.td},r.a.createElement("div",null,r.a.createElement("div",null,n.popularity),r.a.createElement("div",{style:l.secondaryInfo},"Weekly Download")))),r.a.createElement("tr",{style:l.tr},r.a.createElement("th",{style:l.th},"Wizard"),r.a.createElement("td",{style:l.td},e.wizard),r.a.createElement("td",{style:l.td},n.wizard))))},d=t(3),c=t(512),p={btn:{margin:10}},f=function(e){return r.a.createElement(c.a,Object.assign({style:p.btn},e))},h=t(516),v={container:{margin:10},error:{marginTop:5,fontSize:"0.8em",color:"red"}},b=function(e){var n=e.error,t=e.touched;return r.a.createElement("div",{style:v.container},r.a.createElement(h.a,e),n&&t&&r.a.createElement("div",{style:v.error},n))},g=t(515),y={container:{margin:10},error:{marginTop:5,fontSize:"0.8em",color:"red"}},E=function(e){var n=e.error,t=e.touched;return r.a.createElement("div",{style:y.container},r.a.createElement(g.a,e),n&&t&&r.a.createElement("div",{style:y.error},n))},S={form:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"}},x=function(){return{email:"",password:""}},C=function(e){var n={};return e.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(e.email)||(n.email="Invalid email address"):n.email="Email is required",e.password||(n.password="Password is required"),n},w=function(e,n){var t=n.setSubmitting;setTimeout(function(){alert(JSON.stringify(e,null,2)),t(!1)},400)},F=function(){return r.a.createElement("div",null,r.a.createElement(d.e,{initialValues:x(),validate:C,onSubmit:w},function(e){var n=e.values,t=e.errors,a=e.touched,i=e.handleChange,o=e.handleBlur,l=e.handleSubmit,s=e.isSubmitting;return r.a.createElement("form",{onSubmit:l,style:S.form},r.a.createElement(b,{type:"email",name:"email",onChange:i,onBlur:o,value:n.email,error:t.email,touched:a.email,label:"Email"}),r.a.createElement(b,{type:"password",name:"password",onChange:i,onBlur:o,value:n.password,error:t.password,touched:a.password,label:"Pasword"}),r.a.createElement(f,{label:"Submit",type:"submit",disabled:s,unelevated:!0}))}))},T=t(7),k=T.object().shape({email:T.string().email("Invalid email").required("Required"),password:T.string().min(6,function(){return r.a.createElement("span",null,"Too short")}).max(50,r.a.createElement("span",null,"Too long")).required("Required")}),R=function(){return{email:"",password:""}},N=function(e,n){var t=n.setSubmitting;setTimeout(function(){alert(JSON.stringify(e,null,2)),t(!1)},400)},W=function(){return r.a.createElement("div",null,r.a.createElement(d.e,{initialValues:R(),validationSchema:k,onSubmit:N},function(e){var n=e.values,t=e.errors,a=e.touched,i=e.handleChange,o=e.handleBlur,l=e.isSubmitting;return r.a.createElement(d.d,{style:S.form},r.a.createElement(b,{type:"email",name:"email",onChange:i,onBlur:o,value:n.email,error:t.email,touched:a.email,label:"Email"}),r.a.createElement(b,{type:"password",name:"password",onChange:i,onBlur:o,value:n.password,error:t.password,touched:a.password,label:"Pasword"}),r.a.createElement(f,{label:"Submit",type:"submit",disabled:l,unelevated:!0}))}))},O=t(13),j=t(10),q=t.n(j),B=t(94),I=t(16),V=t.n(I),P=t(33);function z(e){return A.apply(this,arguments)}function A(){return(A=Object(P.a)(V.a.mark(function e(n){var t,a;return V.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(n);case 2:return t=e.sent,e.next=5,t.json();case 5:return a=e.sent,e.abrupt("return",a);case 7:case"end":return e.stop()}},e)}))).apply(this,arguments)}var M="https://location-api-hoss.herokuapp.com/",L=Object(B.a)(q.a.identity,function(e){return q.a.map(e,function(e){return{label:e.name,value:e.code}})}),Y=Object(B.a)(q.a.identity,function(e){return q.a.map(e,function(e){var n=e.region;return{label:n,value:n}})}),J=T.object().shape({firstName:T.string().min(2,"Too Short!").max(50,"Too Long!").required("Required"),lastName:T.string().min(2,"Too Short!").max(50,"Too Long!").required("Required"),email:T.string().email("Invalid email").required("Required"),password:T.string().min(6,function(){return r.a.createElement("span",null,"Too short")}).max(50,r.a.createElement("span",null,"Too long")).required("Required"),country:T.string().required("Required"),region:T.string().required("Required")}),_=function(e){var n=e.name,t=e.type,a=e.errors,i=e.touched,o=e.label;return r.a.createElement(d.b,{type:t,name:n,render:function(e){var l=e.field;return r.a.createElement(b,Object.assign({},l,{type:t,error:a[n],touched:i[n],label:o}))}})},Z=function(){return{firstName:"",lastName:"",email:"",password:"",country:"",region:""}},$=function(e,n){var t=n.setSubmitting;setTimeout(function(){alert(JSON.stringify(e,null,2)),t(!1)},400)},D=function(){var e=Object(a.useState)(null),n=Object(O.a)(e,2),t=n[0],i=n[1],o=function(){var e=Object(a.useState)(null),n=Object(O.a)(e,2),t=n[0],r=n[1],i=Object(a.useState)(null),o=Object(O.a)(i,2),l=o[0],s=o[1];return Object(a.useEffect)(function(){function e(){return(e=Object(P.a)(V.a.mark(function e(){var n;return V.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return s(!0),e.next=3,z("".concat(M,"countries"));case 3:n=e.sent,r(n.countries),s(!1);case 6:case"end":return e.stop()}},e)}))).apply(this,arguments)}!function(){e.apply(this,arguments)}()},[]),[t,l]}(),l=Object(O.a)(o,2),s=l[0],m=(l[1],function(e){var n=Object(a.useState)(null),t=Object(O.a)(n,2),r=t[0],i=t[1],o=Object(a.useState)(null),l=Object(O.a)(o,2),s=l[0],m=l[1];return Object(a.useEffect)(function(){function n(){return(n=Object(P.a)(V.a.mark(function n(){var t;return V.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(null==e){n.next=7;break}return m(!0),n.next=4,z("".concat(M,"regions/").concat(e));case 4:t=n.sent,i(t.regions),m(!1);case 7:case"end":return n.stop()}},n)}))).apply(this,arguments)}!function(){n.apply(this,arguments)}()},[e]),[r,s]}(t)),u=Object(O.a)(m,2),c=u[0];u[1];return r.a.createElement("div",null,r.a.createElement(d.e,{initialValues:Z(),validationSchema:J,onSubmit:$},function(e){var n=e.errors,t=e.touched,a=e.isSubmitting,o=e.handleChange;return r.a.createElement(d.d,{style:S.form},r.a.createElement(_,{type:"text",name:"firstName",label:"First Name",errors:n,touched:t}),r.a.createElement(_,{type:"text",name:"lastName",label:"Last Name",errors:n,touched:t}),r.a.createElement(_,{type:"email",name:"email",label:"Email",errors:n,touched:t}),r.a.createElement(_,{type:"password",name:"password",label:"Password",errors:n,touched:t}),r.a.createElement(d.b,{name:"country",render:function(e){var a=e.field,l=e.form;return r.a.createElement(E,Object.assign({},a,{label:"Country",error:n.country,touched:t.country,options:L(s),style:{minWidth:233,maxWidth:233},onChange:function(e){i(e.target.value),o(e),l.setFieldValue("region","")}}))}}),r.a.createElement(d.b,{name:"region",render:function(e){var a=e.field;return r.a.createElement(E,Object.assign({},a,{label:"State/Province",error:n.region,touched:t.region,options:Y(c),style:{minWidth:233,maxWidth:233}}))}}),r.a.createElement(f,{label:"Submit",type:"submit",disabled:a,unelevated:!0}))}))},G=t(156),U=t(57),H=t(152),K=t(58),Q=t(59),X=t(62),ee=t(60),ne=t(65),te=t(518),ae={todoItem:{display:"flex"},todoRemoveBtn:{marginTop:15,color:"rgba(45,45,45,0.9)"}},re={todos:[{item:"shopping"},{item:""}]},ie=function(e){function n(){var e,t;Object(K.a)(this,n);for(var a=arguments.length,r=new Array(a),i=0;i<a;i++)r[i]=arguments[i];return(t=Object(X.a)(this,(e=Object(ee.a)(n)).call.apply(e,[this].concat(r)))).validateTodo=function(e){var n;return null!=e&&0!==q.a.size(e)||(n="Required"),n},t.getInitialValues=function(e){return q.a.reduce(e,function(e,n,a){return Object(H.a)({},e,Object(U.a)({},"".concat(t.todoPrefix).concat(a),n.item))},{})},t.addTodo=function(){t.setState({todos:[].concat(Object(G.a)(t.state.todos),[{item:""}])})},t.onSubmit=function(e,n){var t=n.setSubmitting;setTimeout(function(){alert(JSON.stringify(e,null,2)),t(!1)},400)},t}return Object(ne.a)(n,e),Object(Q.a)(n,[{key:"render",value:function(){var e=this;return r.a.createElement("div",null,r.a.createElement(d.e,{initialValues:re,onSubmit:this.onSubmit,render:function(n){var t=n.values,a=n.errors,i=n.touched;return r.a.createElement(d.d,{style:S.form},r.a.createElement(d.c,{name:"todos",render:function(n){n.insert;var o=n.remove,l=n.push;return r.a.createElement("div",null,q.a.map(t.todos,function(n,t){return r.a.createElement("div",{style:ae.todoItem,key:t},r.a.createElement(oe,{type:"text",name:"todos.".concat(t,".item"),index:t,label:"Todo",groupName:"todos",errors:a,touched:i,validate:e.validateTodo}),r.a.createElement(te.a,{style:ae.todoRemoveBtn,icon:"close",type:"button",onClick:function(){return o(t)}}))}),r.a.createElement(f,{label:"Add Todo",icon:"add",type:"button",onClick:function(){return l({item:""})}}))}}),r.a.createElement(f,{unelevated:!0,type:"submit",label:"Submit",onClick:e.submit}))}}))}}]),n}(r.a.Component),oe=function(e){var n=e.groupName,t=e.name,a=e.type,i=e.errors,o=e.touched,l=e.label,s=e.index,m=e.validate;return r.a.createElement(d.b,{type:a,name:t,validate:m,render:function(e){var t=e.field;return r.a.createElement(b,Object.assign({},t,{type:a,error:q.a.get(i,[n,s,"item"],null),touched:q.a.get(o,[n,s,"item"],!1),label:l}))}})},le={error:{marginTop:5,fontSize:"0.8em",color:"red"}},se=function(e){return e?void 0:"Required"},me=function(e){function n(e){var t;return Object(K.a)(this,n),(t=Object(X.a)(this,Object(ee.a)(n).call(this,e))).next=function(e){return t.setState(function(n){return{page:Math.min(n.page+1,t.props.children.length-1),values:e}})},t.previous=function(){return t.setState(function(e){return{page:Math.max(e.page-1,0)}})},t.validate=function(e){var n=r.a.Children.toArray(t.props.children)[t.state.page];return n.props.validate?n.props.validate(e):{}},t.handleSubmit=function(e,n){var a=t.props,i=a.children,o=a.onSubmit;if(t.state.page===r.a.Children.count(i)-1)return o(e,n);n.setTouched({}),n.setSubmitting(!1),t.next(e)},t.state={page:0,values:e.initialValues},t}return Object(ne.a)(n,e),Object(Q.a)(n,[{key:"render",value:function(){var e=this,n=this.props.children,t=this.state,a=t.page,i=t.values,o=r.a.Children.toArray(n)[a],l=a===r.a.Children.count(n)-1;return r.a.createElement(d.e,{initialValues:i,enableReinitialize:!1,validate:this.validate,onSubmit:this.handleSubmit,render:function(n){n.values;var t=n.handleSubmit,i=n.isSubmitting;n.handleReset;return r.a.createElement("form",{onSubmit:t},o,r.a.createElement("div",{className:"buttons"},a>0&&r.a.createElement(f,{label:"\xab Previous",type:"button",onClick:e.previous}),!l&&r.a.createElement(f,{label:"Next \xbb",type:"button",onClick:e.next}),l&&r.a.createElement(f,{label:"Submit",type:"submit",disabled:i,unelevated:!0})))}})}}]),n}(r.a.Component);me.Page=function(e){return e.children};var ue=function(){return r.a.createElement("div",{className:"App"},r.a.createElement(me,{initialValues:{firstName:"",lastName:"",email:"",favoriteColor:""},onSubmit:function(e,n){var t;(t=300,new Promise(function(e){return setTimeout(e,t)})).then(function(){window.alert(JSON.stringify(e,null,2)),n.setSubmitting(!1)})}},r.a.createElement(me.Page,null,r.a.createElement("div",null,r.a.createElement(de,{type:"text",name:"firstName",label:"First Name",validate:se}),r.a.createElement(d.a,{style:le.error,name:"firstName",component:"div",className:"field-error"})),r.a.createElement("div",null,r.a.createElement(de,{type:"text",name:"lastName",label:"Last Name",validate:se}),r.a.createElement(d.a,{style:le.error,name:"lastName",component:"div",className:"field-error"}))),r.a.createElement(me.Page,{validate:function(e){var n={};return e.email||(n.email="Required"),e.favoriteColor||(n.favoriteColor="Required"),n}},r.a.createElement("div",null,r.a.createElement(de,{type:"email",name:"email",label:"Email"}),r.a.createElement(d.a,{style:le.error,name:"email",component:"div",className:"field-error"})),r.a.createElement("div",null,r.a.createElement(d.b,{name:"favoriteColor",render:function(e){var n=e.field;return r.a.createElement(E,Object.assign({},n,{label:"Select a Color",options:[{label:"\u2764\ufe0f Red",value:"red"},{label:"\ud83d\udc9a Green",value:"green"},{label:"\ud83d\udc99 Blue",value:"blue"}],style:{minWidth:233,maxWidth:233}}))}}),r.a.createElement(d.a,{style:le.error,name:"favoriteColor",component:"div",className:"field-error"})))))},de=function(e){var n=e.name,t=e.type,a=e.label;return r.a.createElement(d.b,{type:t,name:n,render:function(e){var n=e.field;return r.a.createElement(b,Object.assign({},n,{type:t,label:a}))}})},ce=t(517),pe=t(155),fe=function(e){var n=e.codeString;return r.a.createElement(ce.a,{language:"javascript",style:pe.a,customStyle:{background:"#ECECEC",borderLeft:"2px solid #9B65DE",maxHeight:400}},n)},he={table:{margin:"20px 10px 50px"},titleWapper:{maxWidth:1e3,width:"100%",margin:"0 auto",display:"flex",flexDirection:"column"},title:{fontSize:28,lineHeight:"28px",fontWeight:600,marginBottom:15,width:"100%",color:"#252942",textAlign:"left"},subtitle:{fontSize:18,lineHeight:"28px",width:"100%",color:"#252942",textAlign:"left"},formAndCodeWrapper:{background:"#fafafa",display:"flex",margin:"30px 0 60px",position:"relative"},formAndCode:{display:"flex",flexWrap:"nowrap",width:"100%"},formWrapper:{justifyContent:"flex-end",minHeigh:250,overflow:"hidden",margin:20},form:{flex:"0 1 450px",maxWidth:"450px",display:"flex",perspective:"500px",alignItems:"center",justifyContent:"center"},codeWrapper:{justifyContent:"flex-end",minHeigh:250,overflow:"hidden",margin:"0px 10px 0px 50px"},code:{flex:"0 1 100%",maxWidth:"100%",display:"flex",alignItems:"center",justifyContent:"center"},item:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"}},ve=function(e){var n=e.title,t=e.subtitle,a=e.form,i=e.code;return r.a.createElement("div",{style:he.item},r.a.createElement("div",{style:he.titleWapper},r.a.createElement("div",{style:he.title},n),r.a.createElement("div",{style:he.subtitle},t)),r.a.createElement("div",{style:he.formAndCodeWrapper},r.a.createElement("div",{style:he.formAndCode},r.a.createElement("div",{style:he.formWrapper},r.a.createElement("div",{style:he.form},a)),r.a.createElement("div",{style:he.codeWrapper},r.a.createElement("div",{style:he.code},i)))))},be=function(){return r.a.createElement("div",null,r.a.createElement("div",{style:he.table},r.a.createElement(u,null)),ve({title:"Simple form",subtitle:"Just a simple example of a form with validation.",form:r.a.createElement(F,null),code:r.a.createElement(fe,{codeString:'import React from "react";\nimport { Formik } from "formik";\n\n// RMWC Components\nimport { Button, TextField } from "../UI-Kit";\n\n// Styles\nimport commonStyles from "../styles";\n\nconst LoginForm = () => (\n  <div>\n    <Formik\n      initialValues={getInitialValues()}\n      validate={validate}\n      onSubmit={onSubmit}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit} style={commonStyles.form}>\n          <TextField\n            type="email"\n            name="email"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n            error={errors.email}\n            touched={touched.email}\n            label={"Email"}\n          />\n          <TextField\n            type="password"\n            name="password"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n            error={errors.password}\n            touched={touched.password}\n            label={"Pasword"}\n          />\n          <Button\n            label="Submit"\n            type="submit"\n            disabled={isSubmitting}\n            unelevated\n          />\n        </form>\n      )}\n    </Formik>\n  </div>\n);\n\nconst getInitialValues = () => ({ email: "", password: "" });\n\nconst validate = values => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = "Email is required";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = "Invalid email address";\n  }\n  if (!values.password) {\n    errors.password = "Password is required";\n  }\n  return errors;\n};\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginForm;\n'})}),ve({title:"Form with schema validation",subtitle:"You can combine normal validation with schema validation using Yup.",form:r.a.createElement(W,null),code:r.a.createElement(fe,{codeString:'import React from "react";\nimport { Form, Formik } from "formik";\nimport * as Yup from "yup";\n\n// RMWC Components\nimport { Button, TextField } from "../UI-Kit";\n\n// Styles\nimport commonStyles from "../styles";\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email("Invalid email")\n    .required("Required"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required("Required")\n});\n\nconst LoginFormYup = () => {\n  return (\n    <div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          isSubmitting\n        }) => (\n          <Form style={commonStyles.form}>\n            <TextField\n              type="email"\n              name="email"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              error={errors.email}\n              touched={touched.email}\n              label={"Email"}\n            />\n            <TextField\n              type="password"\n              name="password"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              error={errors.password}\n              touched={touched.password}\n              label={"Pasword"}\n            />\n            <Button\n              label="Submit"\n              type="submit"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst getInitialValues = () => ({\n  email: "",\n  password: ""\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default LoginFormYup;\n'})}),ve({title:"Form with network request",subtitle:"Fetch data based on the value of certain input.",form:r.a.createElement(D,null),code:r.a.createElement(fe,{codeString:'import React, { useState } from "react";\n\nimport _ from "lodash";\nimport { Form, Formik, Field } from "formik";\nimport * as Yup from "yup";\nimport { createSelector } from "reselect";\n\n// RMWC Components\nimport { Button, TextField, Select } from "../UI-Kit";\n\n// Hooks\nimport useCountries from "../../hooks/useCountries";\nimport userRegions from "../../hooks/userRegions";\n\n// Styles\nimport commonStyles from "../styles";\n\n// Local Selectors\nconst countiesOptions$ = createSelector(\n  _.identity,\n  countries => {\n    return _.map(countries, ({ name, code }) => ({\n      label: name,\n      value: code\n    }));\n  }\n);\n\nconst regionsOptions$ = createSelector(\n  _.identity,\n  regions => {\n    return _.map(regions, ({ region }) => ({\n      label: region,\n      value: region\n    }));\n  }\n);\n\nconst LoginSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, "Too Short!")\n    .max(50, "Too Long!")\n    .required("Required"),\n  lastName: Yup.string()\n    .min(2, "Too Short!")\n    .max(50, "Too Long!")\n    .required("Required"),\n  email: Yup.string()\n    .email("Invalid email")\n    .required("Required"),\n  password: Yup.string()\n    .min(6, () => <span>Too short</span>)\n    .max(50, <span>Too long</span>)\n    .required("Required"),\n  country: Yup.string().required("Required"),\n  region: Yup.string().required("Required")\n});\n\nconst SignUpForm = () => {\n  const [country, setCountry] = useState(null);\n  const [countries, loadingCountries] = useCountries();\n  const [regions, loadingRegions] = userRegions(country);\n\n  return (\n    <div>\n      <Formik\n        initialValues={getInitialValues()}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched, isSubmitting, handleChange }) => (\n          <Form style={commonStyles.form}>\n            <FormikRMWCTextField\n              type="text"\n              name="firstName"\n              label="First Name"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type="text"\n              name="lastName"\n              label="Last Name"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type="email"\n              name="email"\n              label="Email"\n              errors={errors}\n              touched={touched}\n            />\n            <FormikRMWCTextField\n              type="password"\n              name="password"\n              label="Password"\n              errors={errors}\n              touched={touched}\n            />\n            <Field\n              name="country"\n              render={({ field, form }) => {\n                return (\n                  <Select\n                    {...field}\n                    label="Country"\n                    error={errors["country"]}\n                    touched={touched["country"]}\n                    options={countiesOptions$(countries)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                    onChange={e => {\n                      setCountry(e.target.value);\n                      handleChange(e);\n                      form.setFieldValue("region", "");\n                    }}\n                  />\n                );\n              }}\n            />\n            <Field\n              name="region"\n              render={({ field }) => {\n                return (\n                  <Select\n                    {...field}\n                    label="State/Province"\n                    error={errors["region"]}\n                    touched={touched["region"]}\n                    options={regionsOptions$(regions)}\n                    style={{ minWidth: 233, maxWidth: 233 }}\n                  />\n                );\n              }}\n            />\n            <Button\n              label="Submit"\n              type="submit"\n              disabled={isSubmitting}\n              unelevated\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst FormikRMWCTextField = ({ name, type, errors, touched, label }) => (\n  <Field\n    type={type}\n    name={name}\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type={type}\n        error={errors[name]}\n        touched={touched[name]}\n        label={label}\n      />\n    )}\n  />\n);\n\nconst getInitialValues = () => ({\n  firstName: "",\n  lastName: "",\n  email: "",\n  password: "",\n  country: "",\n  region: ""\n});\n\nconst onSubmit = (values, { setSubmitting }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nexport default SignUpForm;\n'})}),ve({title:"Dynamic form",subtitle:"Add new inputs dynamically to the form.",form:r.a.createElement(ie,null),code:r.a.createElement(fe,{codeString:'import React from "react";\nimport * as Yup from "yup";\nimport _ from "lodash";\nimport { Form, Formik, Field, FieldArray } from "formik";\n\n// RMWC Components\nimport { Button, TextField } from "../UI-Kit";\nimport { IconButton } from "rmwc";\n\n// Styles\nimport commonStyles from "../styles";\nconst styles = {\n  todoItem: {\n    display: "flex"\n  },\n  todoRemoveBtn: {\n    marginTop: 15,\n    color: "rgba(45,45,45,0.9)"\n  }\n};\n\nconst initialValues = {\n  todos: [{ item: "shopping" }, { item: "" }]\n};\n\nexport default class FormWithDynamicInput extends React.Component {\n  render() {\n    return (\n      <div>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={this.onSubmit}\n          render={({ values, errors, touched }) => (\n            <Form style={commonStyles.form}>\n              <FieldArray\n                name="todos"\n                render={({ insert, remove, push }) => (\n                  <div>\n                    {_.map(values.todos, (todo, index) => (\n                      <div style={styles.todoItem} key={index}>\n                        <GroupItemTextField\n                          type="text"\n                          name={`todos.${index}.item`}\n                          index={index}\n                          label="Todo"\n                          groupName="todos"\n                          errors={errors}\n                          touched={touched}\n                          validate={this.validateTodo}\n                        />\n                        <IconButton\n                          style={styles.todoRemoveBtn}\n                          icon={"close"}\n                          type="button"\n                          onClick={() => remove(index)}\n                        />\n                      </div>\n                    ))}\n                    <Button\n                      label="Add Todo"\n                      icon="add"\n                      type="button"\n                      onClick={() => push({ item: "" })}\n                    />\n                  </div>\n                )}\n              />\n              <Button\n                unelevated\n                type="submit"\n                label="Submit"\n                onClick={this.submit}\n              />\n            </Form>\n          )}\n        />\n      </div>\n    );\n  }\n\n  validateTodo = value => {\n    let error;\n    if (value == null || _.size(value) === 0) {\n      error = "Required";\n    }\n    return error;\n  };\n\n  getInitialValues = todos =>\n    _.reduce(\n      todos,\n      (acc, todo, index) => ({\n        ...acc,\n        [`${this.todoPrefix} ${index}`]: todo.item\n      }),\n      {}\n    );\n\n  addTodo = () => {\n    this.setState({\n      todos: [...this.state.todos, { item: "" }]\n    });\n  };\n\n  onSubmit = (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  };\n}\n\nconst GroupItemTextField = ({\n  groupName,\n  name,\n  type,\n  errors,\n  touched,\n  label,\n  index,\n  validate\n}) => (\n  <Field\n    type={type}\n    name={name}\n    validate={validate}\n    render={({ field }) => (\n      <TextField\n        {...field}\n        type={type}\n        error={_.get(errors, [groupName, index, "item"], null)}\n        touched={_.get(touched, [groupName, index, "item"], false)}\n        label={label}\n      />\n    )}\n  />\n);\n'})}),ve({title:"Form wizard",subtitle:"Multi step form with validation.",form:r.a.createElement(ue,null),code:r.a.createElement(fe,{codeString:'import React from "react";\nimport { Formik, Field, ErrorMessage } from "formik";\n\n// RMWC Components\nimport { Button, TextField, Select } from "../UI-Kit";\n\n// Styles\nconst styles = {\n  error: {\n    marginTop: 5,\n    fontSize: "0.8em",\n    color: "red"\n  }\n};\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst required = value => (value ? undefined : "Required");\n\nclass Wizard extends React.Component {\n  static Page = ({ children }) => children;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      values: props.initialValues\n    };\n  }\n\n  next = values =>\n    this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values\n    }));\n\n  previous = () =>\n    this.setState(state => ({\n      page: Math.max(state.page - 1, 0)\n    }));\n\n  validate = values => {\n    const activePage = React.Children.toArray(this.props.children)[\n      this.state.page\n    ];\n    return activePage.props.validate ? activePage.props.validate(values) : {};\n  };\n\n  handleSubmit = (values, bag) => {\n    const { children, onSubmit } = this.props;\n    const { page } = this.state;\n    const isLastPage = page === React.Children.count(children) - 1;\n    if (isLastPage) {\n      return onSubmit(values, bag);\n    } else {\n      bag.setTouched({});\n      bag.setSubmitting(false);\n      this.next(values);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { page, values } = this.state;\n    const activePage = React.Children.toArray(children)[page];\n    const isLastPage = page === React.Children.count(children) - 1;\n    return (\n      <Formik\n        initialValues={values}\n        enableReinitialize={false}\n        validate={this.validate}\n        onSubmit={this.handleSubmit}\n        render={({ values, handleSubmit, isSubmitting, handleReset }) => (\n          <form onSubmit={handleSubmit}>\n            {activePage}\n            <div className="buttons">\n              {page > 0 && (\n                <Button\n                  label="\xab Previous"\n                  type="button"\n                  onClick={this.previous}\n                />\n              )}\n\n              {!isLastPage && (\n                <Button label="Next \xbb" type="button" onClick={this.next} />\n              )}\n              {isLastPage && (\n                <Button\n                  label="Submit"\n                  type="submit"\n                  disabled={isSubmitting}\n                  unelevated\n                />\n              )}\n            </div>\n          </form>\n        )}\n      />\n    );\n  }\n}\n\nconst App = () => (\n  <div className="App">\n    <Wizard\n      initialValues={{\n        firstName: "",\n        lastName: "",\n        email: "",\n        favoriteColor: ""\n      }}\n      onSubmit={(values, actions) => {\n        sleep(300).then(() => {\n          window.alert(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        });\n      }}\n    >\n      <Wizard.Page>\n        <div>\n          <FormikRMWCTextField\n            type="text"\n            name="firstName"\n            label="First Name"\n            validate={required}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name="firstName"\n            component="div"\n            className="field-error"\n          />\n        </div>\n        <div>\n          <FormikRMWCTextField\n            type="text"\n            name="lastName"\n            label="Last Name"\n            validate={required}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name="lastName"\n            component="div"\n            className="field-error"\n          />\n        </div>\n      </Wizard.Page>\n      <Wizard.Page\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = "Required";\n          }\n          if (!values.favoriteColor) {\n            errors.favoriteColor = "Required";\n          }\n          return errors;\n        }}\n      >\n        <div>\n          <FormikRMWCTextField type="email" name="email" label="Email" />\n          <ErrorMessage\n            style={styles.error}\n            name="email"\n            component="div"\n            className="field-error"\n          />\n        </div>\n        <div>\n          <Field\n            name="favoriteColor"\n            render={({ field }) => {\n              return (\n                <Select\n                  {...field}\n                  label="Select a Color"\n                  options={[\n                    { label: "\u2764\ufe0f Red", value: "red" },\n                    { label: "\ud83d\udc9a Green", value: "green" },\n                    { label: "\ud83d\udc99 Blue", value: "blue" }\n                  ]}\n                  style={{ minWidth: 233, maxWidth: 233 }}\n                />\n              );\n            }}\n          />\n          <ErrorMessage\n            style={styles.error}\n            name="favoriteColor"\n            component="div"\n            className="field-error"\n          />\n        </div>\n      </Wizard.Page>\n    </Wizard>\n  </div>\n);\n\nexport default App;\n\nconst FormikRMWCTextField = ({ name, type, label }) => (\n  <Field\n    type={type}\n    name={name}\n    render={({ field }) => <TextField {...field} type={type} label={label} />}\n  />\n);\n'})}))};t(498);var ge=function(){return r.a.createElement("div",{className:"App"},r.a.createElement(be,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(ge,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[161,1,2]]]);
//# sourceMappingURL=main.988897c4.chunk.js.map